{"version":3,"sources":["components/UI/Button/Button.js","components/UI/Button/Button.module.css","components/UI/Spinner/Spinner.js","components/UI/Spinner/Spinner.module.css","containers/Auth/Login.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css"],"names":["button","props","disabled","className","classes","Button","btnType","join","onClick","clicked","children","module","exports","spinner","Loader","login","React","memo","useState","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","controls","setControls","buildingProduct","authRedirectPath","onSetSignupRedirectPath","useEffect","submitHandler","event","a","preventDefault","onLogin","response","console","log","expirationDate","Date","getTime","localStorage","setItem","_id","formElementsArray","key","push","id","config","form","map","formElement","invalid","shouldValidate","changed","controlName","updatedControls","updateObject","target","checkValidity","inputChangedHandler","loading","errorMessage","error","message","authRedirect","isAuthenticated","isAdmin","to","style","marginTop","paddingTop","paddingLeft","action","onSubmit","connect","state","auth","token","signup","productBuilder","building","signupRedirectPath","dispatch","actions","input","inputElement","inputClasses","InputElement","Invalid","onChange","options","option","displayValue","Input","Label","label"],"mappings":"kGAAA,sCAWeA,IAPA,SAACC,GAAD,OACX,4BACIC,SAAUD,EAAMC,SAChBC,UAAW,CAACC,IAAQC,OAAQD,IAAQH,EAAMK,UAAUC,KAAK,KACzDC,QAASP,EAAMQ,SAAUR,EAAMS,Y,oBCPvCC,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,OAAS,yB,iCCD7F,sCAQeC,IAJC,kBACZ,yBAAKV,UAAWC,IAAQU,QAAxB,gB,oBCJJH,EAAOC,QAAU,CAAC,OAAS,wBAAwB,MAAQ,yB,qKCSrDG,EAAQC,IAAMC,MAAK,SAAAhB,GAAU,IAAD,EACAiB,mBAAS,CACvCC,MAAO,CACHC,YAAa,QACbC,cAAe,CACXC,KAAM,QACNC,YAAa,gBAEjBC,MAAO,GACPC,WAAY,CACRC,UAAU,EACVC,SAAS,GAEbC,OAAO,EACPC,SAAS,GAEbC,SAAU,CACNV,YAAa,QACbC,cAAe,CACXC,KAAM,WACNC,YAAa,YAEjBC,MAAO,GACPC,WAAY,CACRC,UAAU,EACVK,UAAW,GAEfH,OAAO,EACPC,SAAS,KA5BiB,mBACzBG,EADyB,KACfC,EADe,KAgCxBC,EAA+DjC,EAA/DiC,gBAAiBC,EAA8ClC,EAA9CkC,iBAAkBC,EAA4BnC,EAA5BmC,wBAE3CC,qBAAU,WACAH,GAAwC,MAArBC,GACvBC,MAEH,CAACF,EAAiBC,EAAkBC,IAEvC,IAWME,EAAa,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DACpBD,EAAME,iBADc,kBAGOxC,EAAMyC,QAASV,EAASb,MAAMK,MAAOQ,EAASF,SAASN,OAH9D,OAGVmB,EAHU,OAIhBC,QAAQC,IAAIF,GACNA,GAGIG,GAAiB,IAAIC,MAAOC,UAClCC,aAAaC,QAAQ,QAASP,EAASQ,KACvCF,aAAaC,QAAQ,iBAAkBJ,GACvCG,aAAaC,QAAQ,SAAUP,EAASxB,QALxCyB,QAAQC,IAAI,iBANA,gDAahBD,QAAQC,IAAR,MAbgB,yDAAH,sDAiBbO,EAAoB,GAC1B,IAAM,IAAIC,KAAOrB,EACboB,EAAkBE,KAAM,CACpBC,GAAIF,EACJG,OAAQxB,EAASqB,KAIzB,IAAII,EAAOL,EAAkBM,KAAK,SAAAC,GAAW,OACzC,kBAAC,IAAD,CACIN,IAAKM,EAAYJ,GACjBnC,YAAauC,EAAYH,OAAOpC,YAChCC,cAAesC,EAAYH,OAAOnC,cAClCG,MAAOmC,EAAYH,OAAOhC,MAC1BoC,SAAUD,EAAYH,OAAO5B,MAC7BiC,eAAgBF,EAAYH,OAAO/B,WACnCI,QAAS8B,EAAYH,OAAO3B,QAC5BiC,QAAS,SAAEvB,GAAF,OA7CW,SAAEA,EAAOwB,GACrC,IAAMC,EAAkBC,YAAcjC,EAAF,eAC/B+B,EAAcE,YAAcjC,EAAS+B,GAAc,CAChDvC,MAAOe,EAAM2B,OAAO1C,MACpBI,MAAOuC,YAAe5B,EAAM2B,OAAO1C,MAAOQ,EAAS+B,GAAatC,YAChEI,SAAS,MAGbI,EAAY+B,GAqCcI,CAAqB7B,EAAOoB,EAAYJ,UAGjEtD,EAAMoE,UACTZ,EAAO,kBAAC,IAAD,OAGT,IAAIa,EAAe,KAEdrE,EAAMsE,QACPD,EACI,2BAAIrE,EAAMsE,MAAMC,UAIxB,IAAIC,EAAe,KAKnB,OAJKxE,EAAMyE,iBAAmBzE,EAAM0E,WAChCF,EAAe,kBAAC,IAAD,CAAUG,GAAG,OAI9B,yBAAKzE,UAAU,aACZsE,EACAH,EAEH,yBAAKO,MAAO,CAAEC,UAAW,OAAQC,WAAY,QAAU5E,UAAU,OAC/D,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CAAMyE,GAAG,IAAIzE,UAAU,yBACrB,uBAAGA,UAAU,uBAAb,KADF,SAGA,yBAAKA,UAAU,UAAU0E,MAAO,CAAEG,YAAa,aAC7C,4BACE,qCAEF,uBAAG7E,UAAU,2BAAb,+BAC2B,kBAAC,IAAD,CAAMyE,GAAG,gBAAT,eAG7B,0BAAMK,OAAO,OAAOC,SAAU5C,GAC3BmB,EACD,kBAAC,IAAD,CAAQnC,KAAK,SAAShB,QAAQ,WAA9B,iBA0BK6E,uBAlBS,SAAAC,GACtB,MAAO,CACHf,QAASe,EAAMC,KAAKhB,QACpBE,MAAOa,EAAMC,KAAKd,MAClBG,gBAAsC,OAArBU,EAAMC,KAAKC,OAAyC,OAAvBF,EAAMG,OAAOD,MAC3DX,QAASS,EAAMC,KAAKV,QACpBzC,gBAAiBkD,EAAMI,eAAeC,SACtCtD,iBAAkBiD,EAAMG,OAAOG,uBAIV,SAAAC,GACzB,MAAO,CACHjD,QAAS,SAAEvB,EAAOW,GAAT,OAAuB6D,EAAUC,IAAezE,EAAOW,KAChEM,wBAAyB,kBAAMuD,EAAUC,IAA+B,UAI/DT,CAA6CpE,I,gCCjK5D,qCA0De8E,IAtDD,SAAE5F,GACZ,IAAI6F,EAAe,KACbC,EAAe,CAAC3F,IAAQ4F,cAM9B,OAJI/F,EAAM2D,SAAW3D,EAAM4D,gBAAkB5D,EAAM4B,SAC/CkE,EAAazC,KAAKlD,IAAQ6F,SAGrBhG,EAAMmB,aACX,IAAO,QACH0E,EAAe,yCACX3F,UAAW4F,EAAaxF,KAAK,MACzBN,EAAMoB,cAFC,CAGXG,MAAOvB,EAAMuB,MACb0E,SAAUjG,EAAM6D,WACpB,MACJ,IAAO,WACHgC,EAAe,4CACX3F,UAAW4F,EAAaxF,KAAK,MACzBN,EAAMoB,cAFC,CAGXG,MAAOvB,EAAMuB,MACb0E,SAAUjG,EAAM6D,WACpB,MACJ,IAAO,SACHgC,EACI,4BACI3F,UAAW4F,EAAaxF,KAAK,KAC7BiB,MAAOvB,EAAMuB,MACb0E,SAAUjG,EAAM6D,SACf7D,EAAMoB,cAAc8E,QAAQzC,KAAI,SAAA0C,GAAM,OACnC,4BAAQ/C,IAAK+C,EAAO5E,MAAOA,MAAO4E,EAAO5E,OACpC4E,EAAOC,kBAKxB,MACJ,QACIP,EAAe,yCACX3F,UAAW4F,EAAaxF,KAAK,MACzBN,EAAMoB,cAFC,CAGXG,MAAOvB,EAAMuB,MACb0E,SAAUjG,EAAM6D,WAG5B,OACI,yBAAK3D,UAAWC,IAAQkG,OACpB,2BAAOnG,UAAWC,IAAQmG,OAAQtG,EAAMuG,OACvCV,K,mBCnDbnF,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,aAAe,4BAA4B,QAAU","file":"static/js/4.5ca15f81.chunk.js","sourcesContent":["import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst button = (props) => (\n    <button\n        disabled={props.disabled}\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={props.clicked}>{props.children}</button>\n);\n\nexport default button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","import React from 'react';\n\nimport classes from './Spinner.module.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load2\":\"Spinner_load2__2gkgc\"};","import React, { useState, useEffect } from 'react';\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport { updateObject, checkValidity } from '../../shared/utility';\nimport * as actions from '../../store/actions/index';\n\nconst login = React.memo(props => {\n  const [controls, setControls] = useState({\n    email: {\n        elementType: 'input',\n        elementConfig: {\n            type: 'email',\n            placeholder: 'Mail Address'\n        },\n        value: '',\n        validation: {\n            required: true,\n            isEmail: true\n        },\n        valid: false,\n        touched: false\n    },\n    password: {\n        elementType: 'input',\n        elementConfig: {\n            type: 'password',\n            placeholder: 'Password'\n        },\n        value: '',\n        validation: {\n            required: true,\n            minLength: 6\n        },\n        valid: false,\n        touched: false\n  }\n  });\n\n  const { buildingProduct, authRedirectPath ,onSetSignupRedirectPath } = props;\n\n  useEffect(() => {\n      if ( !buildingProduct && authRedirectPath !== '/' ) {\n        onSetSignupRedirectPath();\n      }\n  }, [buildingProduct, authRedirectPath ,onSetSignupRedirectPath]);\n\n  const inputChangedHandler = ( event, controlName ) => {\n  const updatedControls = updateObject( controls, {\n      [controlName]: updateObject( controls[controlName], {\n          value: event.target.value,\n          valid: checkValidity( event.target.value, controls[controlName].validation ),\n          touched: true\n          })\n      });\n      setControls(updatedControls);\n  };\n\n  const submitHandler = async(event) => {\n    event.preventDefault();\n      try {\n        const response = await props.onLogin( controls.email.value, controls.password.value );\n        console.log(response);\n          if(!response) {\n            console.log('no fetch data');\n          } else {\n            const expirationDate = new Date().getTime();\n            localStorage.setItem('token', response._id);\n            localStorage.setItem('expirationDate', expirationDate);\n            localStorage.setItem('userId', response.email);}\n      } catch(err) {\n        console.log(err);\n      }\n  };\n\n  const formElementsArray = [];\n  for ( let key in controls ) {\n      formElementsArray.push( {\n          id: key,\n          config: controls[key]\n      } );\n  };\n\n  let form = formElementsArray.map( formElement => (\n      <Input\n          key={formElement.id}\n          elementType={formElement.config.elementType}\n          elementConfig={formElement.config.elementConfig}\n          value={formElement.config.value}\n          invalid={!formElement.config.valid}\n          shouldValidate={formElement.config.validation}\n          touched={formElement.config.touched}\n          changed={( event ) => inputChangedHandler( event, formElement.id )} />\n  ));\n\n  if ( props.loading ) {\n    form = <Spinner />\n  }\n\n  let errorMessage = null;\n\n  if ( props.error ) {\n      errorMessage = (\n          <p>{props.error.message}</p>\n      );\n  }\n\n  let authRedirect = null;\n  if ( props.isAuthenticated || props.isAdmin ) {\n      authRedirect = <Redirect to='/' />\n  }\n\n  return (\n    <div className=\"container\">\n      {authRedirect}\n      {errorMessage}\n\n    <div style={{ marginTop: \"4rem\", paddingTop: \"70px\" }} className=\"row\">\n      <div className=\"col s8 offset-s2\">\n        <Link to=\"/\" className=\"btn-flat waves-effect\">\n          <i className=\"material-icons left\"> </i> Home\n        </Link>\n        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n          <h4>\n            <b>Login</b>\n          </h4>\n          <p className=\"grey-text text-darken-1\">\n            Ainda n√£o tem uma conta? <Link to=\"/user/signup\">Registrar</Link>\n          </p>\n        </div>\n        <form action=\"POST\" onSubmit={submitHandler}>\n          {form}\n          <Button type='submit' btnType=\"Success\">ENVIAR</Button>\n        </form>\n      </div>\n    </div>\n    </div>\n  );\n});\n\nconst mapStateToProps = state => {\n  return {\n      loading: state.auth.loading,\n      error: state.auth.error,\n      isAuthenticated: state.auth.token !== null || state.signup.token !== null,\n      isAdmin: state.auth.isAdmin,\n      buildingProduct: state.productBuilder.building,\n      authRedirectPath: state.signup.signupRedirectPath\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      onLogin: ( email, password ) => dispatch( actions.login( email, password ) ),\n      onSetSignupRedirectPath: () => dispatch( actions.setSignupRedirectPath( '/' ) )\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(login);","import React from 'react';\n\nimport classes from './Input.module.css';\n\nconst input = ( props ) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch ( props.elementType ) {\n        case ( 'input' ):\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'textarea' ):\n            inputElement = <textarea\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'select' ):\n            inputElement = (\n                <select\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n\n};\n\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};"],"sourceRoot":""}