{"version":3,"sources":["components/Controller/Users/UserController.js"],"names":["userController","React","memo","props","useState","usersList","useEffect","getUserHandler","a","api","getUserById","userId","then","user","console","log","catch","err","editableUser","editHandler","id","updateUserById","prod","deleteHandler","deleteUserById","form","map","key","_id","className","Body","Text","username","email","orderId","dataCreated","type","onClick","event","target","params","connect","state","auth"],"mappings":"sMAMMA,EAAiBC,IAAMC,MAAK,SAAAC,GAAU,IAAD,EAELC,mBAAS,IAFJ,mBAEhCC,EAFgC,UAIvCC,qBAAU,WACNC,MACD,IAEH,IAAMA,EAAc,uCAAG,4BAAAC,EAAA,sEACQC,IAAIC,YAAYP,EAAMQ,QAChCC,MAAK,SAAAC,GAAI,OAAIC,QAAQC,IAAIF,MACzBG,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MAHvB,OACbC,EADa,OAInBJ,QAAQC,IAAIG,GAJO,2CAAH,qDAOdC,EAAW,uCAAG,WAAMC,GAAN,SAAAZ,EAAA,sEACVC,IAAIY,eAAeD,GACpBR,MAAK,SAAAU,GAAI,OAAIR,QAAQC,IAAI,cACzBC,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MAHd,2CAAH,sDAMXM,EAAa,uCAAG,WAAMH,GAAN,SAAAZ,EAAA,sEACZC,IAAIe,eAAeJ,GACxBR,MAAK,SAAAU,GAAI,OAAIR,QAAQC,IAAI,cACzBC,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MAHR,2CAAH,sDAMfQ,EAAOpB,EAAUqB,KAAI,SAAAb,GAAI,OACzB,kBAAC,IAAD,CAAMc,IAAKd,EAAKe,IAAKC,UAAU,QAC3B,kBAAC,IAAKC,KAAN,CAAWD,UAAU,aACjB,kBAAC,IAAKE,KAAN,KAAW,uCAAX,IAAiClB,EAAKe,KACtC,kBAAC,IAAKG,KAAN,KAAW,6CAAX,IAAuClB,EAAKmB,UAC5C,kBAAC,IAAKD,KAAN,KAAW,0CAAX,IAAoClB,EAAKoB,OACzC,kBAAC,IAAKF,KAAN,KAAW,4CAAX,IAAsClB,EAAKqB,SAC3C,kBAAC,IAAKH,KAAN,KAAW,yCAAX,IAAmClB,EAAKsB,cAE5C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,KAAK,SAASC,QAAS,SAACC,GAAD,OAAWnB,EAAYmB,EAAMC,OAAOC,OAAOpB,KAAKS,UAAU,0BAAzF,QACA,kBAAC,IAAD,CAAQO,KAAK,SAASC,QAAS,SAACC,GAAD,OAAWf,EAAce,EAAMC,OAAOC,OAAOpB,KAAKS,UAAU,4BAA3F,eAOZ,OACI,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,8BACGJ,QAcJgB,uBANS,SAAAC,GACpB,MAAO,CACH/B,OAAQ+B,EAAMC,KAAKhC,UAIZ8B,CAAyBzC","file":"static/js/10.5b80c30d.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, Button, ButtonGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nimport api from '../../../api/index';;\n\nconst userController = React.memo(props => {\n\n    const [usersList, setUsersList] = useState([]);\n\n    useEffect(() => {\n        getUserHandler();\n    }, []);\n    \n    const getUserHandler = async() => {\n        const editableUser = await api.getUserById(props.userId)\n                        .then(user => console.log(user))\n                        .catch(err => console.log(err));\n        console.log(editableUser);\n    };\n\n    const editHandler = async(id) => {\n        await api.updateUserById(id)\n            .then(prod => console.log('updated'))\n            .catch(err => console.log(err))\n    };\n\n    const deleteHandler = async(id) => {\n        await api.deleteUserById(id)\n        .then(prod => console.log('deleted'))\n        .catch(err => console.log(err))\n    };\n\n    let form = usersList.map(user => (\n        <Card key={user._id} className=\"card\">\n            <Card.Body className=\"card-body\">\n                <Card.Text><strong>ID:</strong> {user._id}</Card.Text>\n                <Card.Text><strong>Username:</strong> {user.username}</Card.Text>\n                <Card.Text><strong>Email:</strong> {user.email}</Card.Text>\n                <Card.Text><strong>OrderId:</strong> {user.orderId}</Card.Text>\n                <Card.Text><strong>Date:</strong> {user.dataCreated}</Card.Text>\n            </Card.Body>\n            <ButtonGroup>\n                <Button type=\"button\" onClick={(event) => editHandler(event.target.params.id)} className=\"btn btn-info btn-space\">EDIT</Button>\n                <Button type=\"button\" onClick={(event) => deleteHandler(event.target.params.id)} className=\"btn btn-danger btn-space\">DELETE</Button>\n            </ButtonGroup>\n                    \n        </Card>\n\n    ));\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <form>\n                  {form}\n                </form>\n            </div>\n        </div>\n    );\n    \n});\n\nconst mapStateToProps = state => {\n    return {\n        userId: state.auth.userId\n    };\n  };\n\nexport default connect(mapStateToProps)(userController);"],"sourceRoot":""}