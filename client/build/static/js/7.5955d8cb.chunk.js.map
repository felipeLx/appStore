{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.module.css","components/Controller/Products/ProductsController.js"],"names":["input","props","inputElement","classes","InputElement","push","Invalid","elementType","elementConfig","value","onChange","changed","type","options","map","option","key","displayValue","className","Input","Label","label","module","exports","productsController","React","memo","useState","editFields","setEditFields","productsList","setProductsList","editableProductId","setEditableProductId","name","placeholder","brand","description","price","category","quantity","picture","controls","setControls","useEffect","api","getAllProducts","then","products","data","catch","err","console","log","editHandler","event","a","preventDefault","index","target","id","idProductToEdited","_id","getOneProduct","response","toString","formElementsArray","config","formElement","inputChangedHandler","elementIndex","controlName","updatedControls","updateObject","submitProductHandler","updateProduct","product","updateProductById","deleteHandler","deleteProductById","prod","window","location","reload","form","length","i","Body","Text","style","margin","onClick","params","action","onSubmit"],"mappings":"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","file":"static/js/7.5955d8cb.chunk.js","sourcesContent":["import React from 'react';\n\nimport classes from './Input.module.css';\n\nconst input = ( props ) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n   \n    inputClasses.push(classes.Invalid);\n   \n    switch ( props.elementType ) {\n        case ( 'input' ):\n            inputElement = <input\n                // className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed}\n                type='text' />;\n            break;\n        case ( 'number' ):\n            inputElement = <input\n                // className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed}\n                type='number' />;\n            break;\n        case ( 'textarea' ):\n            inputElement = <textarea\n                // className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed}\n                type='text' />;\n            break;\n        case ( 'select' ):\n            inputElement = (\n                <select\n                    // className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input\n                // className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed}\n                type='text' />;\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n\n};\n\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","import React, { useEffect, useState } from 'react';\nimport { Card, Button } from 'react-bootstrap';\n\nimport api from '../../../api/index';\nimport Input from '../../UI/Input/Input';\nimport { updateObject, checkValidity } from '../../../shared/utility';\n\nconst productsController = React.memo(props => {\n\n    const [editFields, setEditFields] = useState(false); \n    const [productsList, setProductsList] = useState([]);\n    const [editableProductId, setEditableProductId] = useState('');\n    const [controls, setControls] = useState({\n        name: {\n          elementType: 'input',\n          elementConfig: {\n              type: 'text',\n              placeholder: 'Nome do produto'\n          },\n          value: ''\n        },\n        brand: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Marca ou fabricante'\n            },\n            value: ''\n          },\n        description: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'textarea',\n                placeholder: 'Descrição do produto'\n            },\n            value: ''\n          },\n        price: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'number',\n                placeholder: 'Preço de venda'\n            },\n            value: 0\n          },\n        category: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Categoria'\n            },\n            value: ''\n          },\n          quantity: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'number',\n                placeholder: 'Quantidade'\n            },\n            value: 0\n          },\n          picture: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Link da imagem'\n            },\n            value: 0\n          }\n    });\n    \n    useEffect(() => {\n        api.getAllProducts()\n            .then(products => {\n                setProductsList(products.data);\n            })\n            .catch(err => console.log(err));\n    }, []);\n\n    const editHandler = async(event) => {\n        event.preventDefault();     \n        setEditFields(!editFields); \n        let index = event.target.id;\n        let idProductToEdited = productsList[index]._id;\n        setEditableProductId(idProductToEdited);\n        const response = await api.getOneProduct(idProductToEdited);\n        \n        try {\n            setControls({\n                name: {\n                    value: response.data.name\n                },\n                brand: {\n                    value: response.data.brand\n                },\n                price: {\n                    value: response.data.price\n                },\n                quantity: {\n                    value: response.data.quantity\n                },\n                description: {\n                    value: response.data.description\n                },\n                picture: {\n                    value: response.data.picture.toString()\n                },\n                category: {\n                    value: response.data.category\n                }\n            })\n        } catch(err) {\n                console.log(err);\n            }\n    };\n      \n    let input = '';\n    \n    const formElementsArray = [];\n        for ( let key in controls ) {\n            formElementsArray.push({\n                id: key,\n                config: controls[key]\n        });\n    };\n\n    if(editFields) {\n        input = formElementsArray.map( formElement => {\n            return (\n            <div key={formElement.id}>\n            <Input\n                value={formElement.config.value}\n                label={formElement.id}\n                changed={( event ) => inputChangedHandler( event, formElement.id )} />\n            </div>    \n            )\n        });   \n    };\n\n\n    const inputChangedHandler = ( event, controlName ) => {\n        const updatedControls = updateObject( controls, {\n            [controlName]: updateObject( controls[controlName], {\n                value: event.target.value,\n                })\n            });\n            setControls(updatedControls);\n        };\n\n\n    const submitProductHandler = async() => {\n        const updateProduct = {\n            product: controls.name.value,\n            brand: controls.brand.value,\n            category: controls.category.value,\n            price: controls.price.value,\n            description: controls.description.value,\n            picture: controls.picture.value,\n            quantity: controls.quantity.value\n        };\n\n        const response = await api.updateProductById(editableProductId, updateProduct);\n        console.log(response);\n        \n    };\n\n    const deleteHandler = async(id) => {\n        await api.deleteProductById(id)\n        .then(prod => window.location.reload(true))\n        .catch(err => console.log(err))\n    };\n\n    let form = [];\n\n    if(productsList.length > 0) {\n        let elementIndex;\n        productsList.map(product => {\n            for(let i = 0; i < productsList.length; i++) {\n                if(productsList[i].name === product.name) {\n                    elementIndex = i;\n                }}\n            form.push(\n                <div key={product._id} className='col' >\n                    <Card>\n                        <Card.Body>\n                            <Card.Text><strong>Name: </strong>{product.name}</Card.Text>\n                            <Card.Text><strong>Marca</strong>{product.brand}</Card.Text>\n                            <Card.Text><strong>Preço: R$ </strong>{product.price}</Card.Text>\n                            <Card.Text><strong>Quantidade: </strong>{product.quantity}</Card.Text>\n                            <Card.Text><strong>Categoria: </strong>{product.category}</Card.Text>\n                            <Card.Text><strong>Descrição:</strong> {product.description}</Card.Text>\n                            <Card.Text><strong>Link da imagem:</strong> {product.picture.toString()}</Card.Text>\n                        </Card.Body>\n                    </Card>\n                    <div className='col'>\n                        {!editFields ? \n                            <Button type='button' id={elementIndex} style={{margin: '10px'}} onClick={editHandler} className='btn btn-warning'>EDITAR</Button> :\n                            null\n                        }\n                    \n                        <Button style={{margin: '10px'}} onClick={(event) => deleteHandler(event.target.params.id)} className='btn btn-danger btn-space'>DELETE</Button>\n                    </div>\n                </div>\n            )\n        });\n    }\n    \n\n    return(\n        <div className='container'>\n            <div className='row'>\n                {editFields ? \n                    <form action=\"POST\" onSubmit={submitProductHandler}>\n                        {input}\n                        <Button type='submit' style={{margin: '10px'}} className='btn btn-info'>ENVIAR</Button>\n                    </form> : \n                    <div>{form}</div>}\n            </div>\n        </div>\n    ); \n});\n\nexport default productsController;"],"sourceRoot":""}