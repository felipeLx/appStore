{"version":3,"sources":["../node_modules/react-bootstrap/esm/ButtonGroup.js","hoc/withErrorHandler/withErrorHandler.js","hooks/http-error-handler.js","components/Controller/Orders/OrderController.js"],"names":["ButtonGroup","React","forwardRef","props","ref","bsPrefix","size","toggle","vertical","className","_props$as","as","Component","rest","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","baseClass","createElement","_extends","classNames","displayName","defaultProps","role","withErrorHandler","WrappedComponent","axios","httpClient","useState","error","setError","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","err","useEffect","eject","useHttpErrorHandler","clearError","Aux","Modal","show","modalClosed","message","orderController","memo","orderList","setOrderList","a","api","getOrderById","userId","then","order","catch","console","log","checkedOrder","getOrderHandler","editHandler","id","updateUserById","prod","deleteHandler","deleteUserById","form","map","Card","key","_id","Body","Text","productId","Button","type","onClick","event","target","params","connect","state","orders","loading","token","auth","sigunp","dispatch","onFetchOrders","actions"],"mappings":"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","file":"static/js/8.9ed752f4.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = React.forwardRef(function (props, ref) {\n  var bsPrefix = props.bsPrefix,\n      size = props.size,\n      toggle = props.toggle,\n      vertical = props.vertical,\n      className = props.className,\n      _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      rest = _objectWithoutPropertiesLoose(props, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import React from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\nimport useHttpErrorHandler from '../../hooks/http-error-handler';\n\nconst withErrorHandler = ( WrappedComponent, axios ) => {\n    return props => {\n        const [error, clearError] = useHttpErrorHandler(axios);\n\n            return (\n                <Aux>\n                    <Modal\n                        show={error}\n                        modalClosed={clearError}>\n                        {error ? error.message : null}\n                    </Modal>\n                    <WrappedComponent {...props} />\n                </Aux>\n            );\n        }\n}\n\nexport default withErrorHandler;","import { useState, useEffect} from 'react';\n\nexport default httpClient => {\n    const [error, setError] = useState(null);\n\n            const reqInterceptor = httpClient.interceptors.request.use( req => {\n                setError(null);\n                return req;\n            } );\n            const resInterceptor = httpClient.interceptors.response.use( \n                res => res,\n                err => {\n                setError(err);\n                } \n            );\n\n        useEffect(() => {\n            return () => {\n                httpClient.interceptors.request.eject( reqInterceptor );\n                httpClient.interceptors.response.eject( resInterceptor );\n            };\n        }, [reqInterceptor, resInterceptor, httpClient.interceptors.request, httpClient.interceptors.response]);\n\n        const errorConfirmedHandler = () => {\n            setError(null);\n};\n\n    return [error, errorConfirmedHandler];\n}","import React, { useEffect, useState } from 'react';\nimport { Card, Button, ButtonGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport api from '../../../api/index';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../../store/actions/index';\n\nconst orderController = React.memo(props => {\n    \n    const [orderList, setOrderList] = useState([]);\n\n    useEffect(() => {\n        const getOrderHandler = async() => {\n            const checkedOrder = await api.getOrderById(props.userId)\n                            .then(order => setOrderList(order))\n                            .catch(err => console.log(err));\n            console.log(checkedOrder);\n        };\n        getOrderHandler();\n    }, [props.userId]);\n    \n    \n\n    const editHandler = async(id) => {\n        await api.updateUserById(id)\n            .then(prod => console.log('updated'))\n            .catch(err => console.log(err))\n    };\n\n    const deleteHandler = async(id) => {\n        await api.deleteUserById(id)\n        .then(prod => console.log('deleted'))\n        .catch(err => console.log(err))\n    };\n\n    let form = orderList.map(order => (\n        <Card key={order._id} className=\"card\">\n            <Card.Body className=\"card-body\">\n                <Card.Text><strong>ID:</strong> {order._id}</Card.Text>\n                <Card.Text><strong>Produto Id:</strong> {order.productId}</Card.Text>\n            </Card.Body>\n            <ButtonGroup>\n                <Button type=\"button\" onClick={(event) => editHandler(event.target.params.id)} className=\"btn btn-info btn-space\">EDIT</Button>\n                <Button type=\"button\" onClick={(event) => deleteHandler(event.target.params.id)} className=\"btn btn-danger btn-space\">DELETE</Button>\n            </ButtonGroup>\n                    \n        </Card>\n\n    ));\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <form>\n                  {form}\n                </form>\n            </div>\n        </div>\n    );\n    \n});\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token || state.sigunp.token,\n        userId: state.auth.userId || state.sigunp.userId\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token, userId) => dispatch( actions.fetchOrders(token, userId) )\n    };\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps )( withErrorHandler( orderController, axios ) );"],"sourceRoot":""}