{"version":3,"sources":["../node_modules/react-bootstrap/esm/ButtonGroup.js","components/Controller/Users/UserController.js"],"names":["ButtonGroup","React","forwardRef","props","ref","bsPrefix","size","toggle","vertical","className","_props$as","as","Component","rest","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","baseClass","createElement","_extends","classNames","displayName","defaultProps","role","userController","memo","useState","usersList","useEffect","a","api","getUserById","userId","then","user","console","log","catch","err","getUserHandler","editHandler","id","updateUserById","prod","deleteHandler","deleteUserById","form","map","key","_id","Body","Text","username","email","orderId","dataCreated","type","onClick","event","target","params","connect","state","auth"],"mappings":"mGAAA,4DAUIA,EAAcC,IAAMC,YAAW,SAAUC,EAAOC,GAClD,IAAIC,EAAWF,EAAME,SACjBC,EAAOH,EAAMG,KACbC,EAASJ,EAAMI,OACfC,EAAWL,EAAMK,SACjBC,EAAYN,EAAMM,UAClBC,EAAYP,EAAMQ,GAClBC,OAA0B,IAAdF,EAAuB,MAAQA,EAC3CG,EAAOC,YAA8BX,EAAO,CAAC,WAAY,OAAQ,SAAU,WAAY,YAAa,OAEpGY,EAASC,YAAmBX,EAAU,aACtCY,EAAYF,EAEhB,OADIP,IAAUS,EAAYF,EAAS,aACfd,IAAMiB,cAAcN,EAAWO,YAAS,GAAIN,EAAM,CACpET,IAAKA,EACLK,UAAWW,IAAWX,EAAWQ,EAAWX,GAAQS,EAAS,IAAMT,EAAMC,GAAUQ,EAAS,iBAGhGf,EAAYqB,YAAc,cAC1BrB,EAAYsB,aAxBO,CACjBd,UAAU,EACVD,QAAQ,EACRgB,KAAM,SAsBOvB,O,qICxBTwB,EAAiBvB,IAAMwB,MAAK,SAAAtB,GAAU,IAAD,EAEnBuB,mBAAS,IAAtBC,EAFgC,oBAIvCC,qBAAU,YACc,uCAAG,sBAAAC,EAAA,sEACbC,IAAIC,YAAY5B,EAAM6B,QACXC,MAAK,SAAAC,GAAI,OAAIC,QAAQC,IAAIF,MACzBG,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MAHvB,2CAAH,qDAMpBC,KACD,CAACpC,EAAM6B,SAIV,IAAMQ,EAAW,uCAAG,WAAMC,GAAN,SAAAZ,EAAA,sEACVC,IAAIY,eAAeD,GACpBR,MAAK,SAAAU,GAAI,OAAIR,QAAQC,IAAI,cACzBC,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MAHd,2CAAH,sDAMXM,EAAa,uCAAG,WAAMH,GAAN,SAAAZ,EAAA,sEACZC,IAAIe,eAAeJ,GACxBR,MAAK,SAAAU,GAAI,OAAIR,QAAQC,IAAI,cACzBC,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MAHR,2CAAH,sDAMfQ,EAAOnB,EAAUoB,KAAI,SAAAb,GAAI,OACzB,kBAAC,IAAD,CAAMc,IAAKd,EAAKe,IAAKxC,UAAU,QAC3B,kBAAC,IAAKyC,KAAN,CAAWzC,UAAU,aACjB,kBAAC,IAAK0C,KAAN,KAAW,uCAAX,IAAiCjB,EAAKe,KACtC,kBAAC,IAAKE,KAAN,KAAW,6CAAX,IAAuCjB,EAAKkB,UAC5C,kBAAC,IAAKD,KAAN,KAAW,0CAAX,IAAoCjB,EAAKmB,OACzC,kBAAC,IAAKF,KAAN,KAAW,4CAAX,IAAsCjB,EAAKoB,SAC3C,kBAAC,IAAKH,KAAN,KAAW,yCAAX,IAAmCjB,EAAKqB,cAE5C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,KAAK,SAASC,QAAS,SAACC,GAAD,OAAWlB,EAAYkB,EAAMC,OAAOC,OAAOnB,KAAKhC,UAAU,0BAAzF,QACA,kBAAC,IAAD,CAAQ+C,KAAK,SAASC,QAAS,SAACC,GAAD,OAAWd,EAAcc,EAAMC,OAAOC,OAAOnB,KAAKhC,UAAU,4BAA3F,eAOZ,OACI,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,8BACGqC,QAcJe,uBANS,SAAAC,GACpB,MAAO,CACH9B,OAAQ8B,EAAMC,KAAK/B,UAIZ6B,CAAyBrC","file":"static/js/10.27dabb8a.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = React.forwardRef(function (props, ref) {\n  var bsPrefix = props.bsPrefix,\n      size = props.size,\n      toggle = props.toggle,\n      vertical = props.vertical,\n      className = props.className,\n      _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      rest = _objectWithoutPropertiesLoose(props, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import React, { useState, useEffect } from 'react';\nimport { Card, Button, ButtonGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nimport api from '../../../api/index';;\n\nconst userController = React.memo(props => {\n\n    const [usersList] = useState([]);\n\n    useEffect(() => {\n        const getUserHandler = async() => {\n            await api.getUserById(props.userId)\n                            .then(user => console.log(user))\n                            .catch(err => console.log(err));\n        };\n\n        getUserHandler();\n    }, [props.userId]);\n\n    \n\n    const editHandler = async(id) => {\n        await api.updateUserById(id)\n            .then(prod => console.log('updated'))\n            .catch(err => console.log(err))\n    };\n\n    const deleteHandler = async(id) => {\n        await api.deleteUserById(id)\n        .then(prod => console.log('deleted'))\n        .catch(err => console.log(err))\n    };\n\n    let form = usersList.map(user => (\n        <Card key={user._id} className=\"card\">\n            <Card.Body className=\"card-body\">\n                <Card.Text><strong>ID:</strong> {user._id}</Card.Text>\n                <Card.Text><strong>Username:</strong> {user.username}</Card.Text>\n                <Card.Text><strong>Email:</strong> {user.email}</Card.Text>\n                <Card.Text><strong>OrderId:</strong> {user.orderId}</Card.Text>\n                <Card.Text><strong>Date:</strong> {user.dataCreated}</Card.Text>\n            </Card.Body>\n            <ButtonGroup>\n                <Button type=\"button\" onClick={(event) => editHandler(event.target.params.id)} className=\"btn btn-info btn-space\">EDIT</Button>\n                <Button type=\"button\" onClick={(event) => deleteHandler(event.target.params.id)} className=\"btn btn-danger btn-space\">DELETE</Button>\n            </ButtonGroup>\n                    \n        </Card>\n\n    ));\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <form>\n                  {form}\n                </form>\n            </div>\n        </div>\n    );\n    \n});\n\nconst mapStateToProps = state => {\n    return {\n        userId: state.auth.userId\n    };\n  };\n\nexport default connect(mapStateToProps)(userController);"],"sourceRoot":""}