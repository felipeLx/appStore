{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.module.css","../node_modules/react-bootstrap/esm/ButtonGroup.js","components/Controller/Users/UsersController.js","components/Controller/Orders/OrdersController.js","components/Controller/Products/ProductsController.js","containers/Dashboard/AdminDashboard.js"],"names":["input","props","inputElement","classes","InputElement","push","Invalid","elementType","elementConfig","value","onChange","changed","type","options","map","option","key","displayValue","className","Input","Label","label","module","exports","ButtonGroup","React","forwardRef","ref","bsPrefix","size","toggle","vertical","_props$as","as","Component","rest","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","baseClass","createElement","_extends","classNames","displayName","defaultProps","role","usersController","memo","useState","usersList","setUsersList","useEffect","api","getAllUsers","then","users","data","catch","err","console","log","editHandler","id","a","updateUserById","prod","deleteHandler","deleteUserById","form","user","_id","Body","Text","username","email","orderId","dataCreated","onClick","event","target","params","ordersController","ordersList","setOrdersList","getAllOrders","orders","updateOrderById","ord","deleteOrderById","order","userId","productId","productsController","editFields","setEditFields","productsList","setProductsList","editableProductId","setEditableProductId","name","placeholder","brand","description","price","category","quantity","picture","controls","setControls","getAllProducts","products","preventDefault","index","idProductToEdited","getOneProduct","response","toString","formElementsArray","config","formElement","inputChangedHandler","elementIndex","controlName","updatedControls","updateObject","submitProductHandler","updateProduct","product","updateProductById","deleteProductById","window","location","reload","length","i","style","margin","action","onSubmit","AdminDashboard","createProduct","setCreateProduct","showProducts","setShowProducts","showOrders","setShowOrders","showUsers","setShowUsers","valid","touched","productFields","setProductFields","submitHandler","newProduct","insertProduct","setTimeout","alert","invalid","fieldName","updatedFields","padding","Title","variant"],"mappings":"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","file":"static/js/3.85a34e74.chunk.js","sourcesContent":["import React from 'react';\n\nimport classes from './Input.module.css';\n\nconst input = ( props ) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n   \n    inputClasses.push(classes.Invalid);\n   \n    switch ( props.elementType ) {\n        case ( 'input' ):\n            inputElement = <input\n                // className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed}\n                type='text' />;\n            break;\n        case ( 'number' ):\n            inputElement = <input\n                // className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed}\n                type='number' />;\n            break;\n        case ( 'textarea' ):\n            inputElement = <textarea\n                // className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed}\n                type='text' />;\n            break;\n        case ( 'select' ):\n            inputElement = (\n                <select\n                    // className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input\n                // className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed}\n                type='text' />;\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n\n};\n\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = React.forwardRef(function (props, ref) {\n  var bsPrefix = props.bsPrefix,\n      size = props.size,\n      toggle = props.toggle,\n      vertical = props.vertical,\n      className = props.className,\n      _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      rest = _objectWithoutPropertiesLoose(props, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import React, { useEffect, useState } from 'react';\nimport { Card, Button, ButtonGroup } from 'react-bootstrap';\n\nimport api from '../../../api/index';\n// import Spinner from '../../UI/Spinner/Spinner';\n// import { updateObject } from '../../../shared/utility';\n\nconst usersController = React.memo(props => {\n\n    const [usersList, setUsersList] = useState([]);\n    // const [controls, setControls] = useState({\n    //     name: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'text',\n    //             placeholder: 'Nome do produto'\n    //         },\n    //         value: ''\n    //     },\n    //     brand: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'text',\n    //             placeholder: 'Marca'\n    //         },\n    //         value: ''\n    //     },\n    //     category: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'text',\n    //             placeholder: 'Categoria'\n    //         },\n    //         value: ''\n    //     },\n    //     price: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'text',\n    //             placeholder: 'Preço'\n    //         },\n    //         value: ''\n    //     },\n    //     description: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'textarea',\n    //             placeholder: 'Descrição'\n    //         },\n    //         value: ''\n    //     },\n    // });\n    \n    useEffect(() => {\n        api.getAllUsers()\n            .then(users => {\n                setUsersList(users.data);\n            })\n            .catch(err => console.log(err));\n    }, []);\n    \n\n    const editHandler = async(id) => {\n        await api.updateUserById(id)\n            .then(prod => console.log('updated'))\n            .catch(err => console.log(err))\n    };\n\n    const deleteHandler = async(id) => {\n        await api.deleteUserById(id)\n        .then(prod => console.log('deleted'))\n        .catch(err => console.log(err))\n    };\n\n    // const createHandler = async() => {\n\n    //     return <p>create new product</p>\n    // };\n\n    // const inputChangedHandler = ( event, controlName ) => {\n    //     const updatedControls = updateObject( controls, {\n    //         [controlName]: updateObject( controls[controlName], {\n    //             value: event.target.value,\n    //             })\n    //         });\n    //         setControls(updatedControls);\n    //     };\n\n    // const submitHandler = ( event ) => {\n    //     event.preventDefault();\n    //     console.log('submitHandler - productsController');\n        \n    // };\n        \n\n    // const formElementsArray = [];\n    // for ( let key in controls ) {\n    //     formElementsArray.push( {\n    //         id: key,\n    //         config: controls[key]\n    //     } );\n    // };\n\n    // let form = formElementsArray.map( formElement => (\n    //     <Input\n    //         key={formElement.id}\n    //         elementType={formElement.config.elementType}\n    //         elementConfig={formElement.config.elementConfig}\n    //         value={formElement.config.value}\n    //         changed={( event ) => inputChangedHandler( event, formElement.id )} />\n    // ));\n\n    let form = usersList.map(user => (\n        <Card key={user._id} className=\"card\">\n            <Card.Body className=\"card-body\">\n                <Card.Text><strong>ID:</strong> {user._id}</Card.Text>\n                <Card.Text><strong>Username:</strong> {user.username}</Card.Text>\n                <Card.Text><strong>Email:</strong> {user.email}</Card.Text>\n                <Card.Text><strong>OrderId:</strong> {user.orderId}</Card.Text>\n                <Card.Text><strong>Date:</strong> {user.dataCreated}</Card.Text>\n            </Card.Body>\n            <ButtonGroup>\n                <Button onClick={(event) => editHandler(event.target.params.id)} className=\"btn btn-info btn-space\">EDIT</Button>\n                <Button onClick={(event) => deleteHandler(event.target.params.id)} className=\"btn btn-danger btn-space\">DELETE</Button>\n            </ButtonGroup>\n                    \n        </Card>\n\n    ));\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <form>\n                  {form}\n                </form>\n            </div>\n        </div>\n    );\n    \n});\n\nexport default usersController;","import React, { useEffect, useState } from 'react';\nimport { Card, Button, ButtonGroup } from 'react-bootstrap';\n\nimport api from '../../../api/index';\n// import Input from '../../UI/Input/Input';\n// import { updateObject } from '../../../shared/utility';\n\nconst ordersController = React.memo(props => {\n\n    const [ordersList, setOrdersList] = useState([]);\n    // const [controls, setControls] = useState({\n    //     name: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'text',\n    //             placeholder: 'Nome do produto'\n    //         },\n    //         value: ''\n    //     },\n    //     brand: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'text',\n    //             placeholder: 'Marca'\n    //         },\n    //         value: ''\n    //     },\n    //     category: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'text',\n    //             placeholder: 'Categoria'\n    //         },\n    //         value: ''\n    //     },\n    //     price: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'text',\n    //             placeholder: 'Preço'\n    //         },\n    //         value: ''\n    //     },\n    //     description: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'textarea',\n    //             placeholder: 'Descrição'\n    //         },\n    //         value: ''\n    //     },\n    // });\n    \n    useEffect(() => {\n        api.getAllOrders()\n            .then(orders => {\n                setOrdersList(orders.data);\n            })\n            .catch(err => console.log(err));\n    }, []);\n    \n\n    const editHandler = async(id) => {\n        await api.updateOrderById(id)\n            .then(ord => console.log('edited'))\n            .catch(err => console.log(err))\n    };\n\n    const deleteHandler = async(id) => {\n        await api.deleteOrderById(id)\n        .then(ord => console.log('deleted'))\n        .catch(err => console.log(err))\n    };\n\n    // const createHandler = async() => {\n\n    //     return <p>create new product</p>\n    // };\n\n    // const inputChangedHandler = ( event, controlName ) => {\n    //     const updatedControls = updateObject( controls, {\n    //         [controlName]: updateObject( controls[controlName], {\n    //             value: event.target.value,\n    //             })\n    //         });\n    //         setControls(updatedControls);\n    //     };\n\n    // const submitHandler = ( event ) => {\n    //     event.preventDefault();\n    //     console.log('submitHandler - productsController');\n        \n    // };\n        \n\n    // const formElementsArray = [];\n    // for ( let key in controls ) {\n    //     formElementsArray.push( {\n    //         id: key,\n    //         config: controls[key]\n    //     } );\n    // };\n\n    // let form = formElementsArray.map( formElement => (\n    //     <Input\n    //         key={formElement.id}\n    //         elementType={formElement.config.elementType}\n    //         elementConfig={formElement.config.elementConfig}\n    //         value={formElement.config.value}\n    //         changed={( event ) => inputChangedHandler( event, formElement.id )} />\n    // ));\n    let form = ordersList.map(order => (\n        <Card key={order._id} className=\"card\">\n            <Card.Body className=\"card-body\">\n                <Card.Text><strong>ID:</strong> {order._id}</Card.Text>\n                <Card.Text><strong>UserId:</strong> {order.userId}</Card.Text>\n                <Card.Text><strong>ProductId:</strong> {order.productId}</Card.Text>\n            </Card.Body>\n            <ButtonGroup>\n                <Button onClick={(event) => editHandler(event.target.params.id)} className=\"btn btn-info btn-space\">EDIT</Button>\n                <Button onClick={(event) => deleteHandler(event.target.params.id)} className=\"btn btn-danger btn-space\">DELETE</Button>\n            </ButtonGroup>\n        </Card>\n\n    ));\n\n    return(\n        <div className=\"container\">\n            <div className=\"col\">\n                \n                <form>\n                  {form}\n                </form>\n            </div>\n        </div>\n    );\n    \n});\n\nexport default ordersController;","import React, { useEffect, useState } from 'react';\nimport { Card, Button } from 'react-bootstrap';\n\nimport api from '../../../api/index';\nimport Input from '../../UI/Input/Input';\nimport { updateObject, checkValidity } from '../../../shared/utility';\n\nconst productsController = React.memo(props => {\n\n    const [editFields, setEditFields] = useState(false); \n    const [productsList, setProductsList] = useState([]);\n    const [editableProductId, setEditableProductId] = useState('');\n    const [controls, setControls] = useState({\n        name: {\n          elementType: 'input',\n          elementConfig: {\n              type: 'text',\n              placeholder: 'Nome do produto'\n          },\n          value: ''\n        },\n        brand: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Marca ou fabricante'\n            },\n            value: ''\n          },\n        description: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'textarea',\n                placeholder: 'Descrição do produto'\n            },\n            value: ''\n          },\n        price: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'number',\n                placeholder: 'Preço de venda'\n            },\n            value: 0\n          },\n        category: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Categoria'\n            },\n            value: ''\n          },\n          quantity: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'number',\n                placeholder: 'Quantidade'\n            },\n            value: 0\n          },\n          picture: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Link da imagem'\n            },\n            value: 0\n          }\n    });\n    \n    useEffect(() => {\n        api.getAllProducts()\n            .then(products => {\n                setProductsList(products.data);\n            })\n            .catch(err => console.log(err));\n    }, []);\n\n    const editHandler = async(event) => {\n        event.preventDefault();     \n        setEditFields(!editFields); \n        let index = event.target.id;\n        let idProductToEdited = productsList[index]._id;\n        setEditableProductId(idProductToEdited);\n        const response = await api.getOneProduct(idProductToEdited);\n        \n        try {\n            setControls({\n                name: {\n                    value: response.data.name\n                },\n                brand: {\n                    value: response.data.brand\n                },\n                price: {\n                    value: response.data.price\n                },\n                quantity: {\n                    value: response.data.quantity\n                },\n                description: {\n                    value: response.data.description\n                },\n                picture: {\n                    value: response.data.picture.toString()\n                },\n                category: {\n                    value: response.data.category\n                }\n            })\n        } catch(err) {\n                console.log(err);\n            }\n    };\n      \n    let input = '';\n    \n    const formElementsArray = [];\n        for ( let key in controls ) {\n            formElementsArray.push({\n                id: key,\n                config: controls[key]\n        });\n    };\n\n    if(editFields) {\n        input = formElementsArray.map( formElement => {\n            return (\n            <div key={formElement.id}>\n            <Input\n                value={formElement.config.value}\n                label={formElement.id}\n                changed={( event ) => inputChangedHandler( event, formElement.id )} />\n            </div>    \n            )\n        });   \n    };\n\n\n    const inputChangedHandler = ( event, controlName ) => {\n        const updatedControls = updateObject( controls, {\n            [controlName]: updateObject( controls[controlName], {\n                value: event.target.value,\n                })\n            });\n            setControls(updatedControls);\n        };\n\n\n    const submitProductHandler = async() => {\n        const updateProduct = {\n            product: controls.name.value,\n            brand: controls.brand.value,\n            category: controls.category.value,\n            price: controls.price.value,\n            description: controls.description.value,\n            picture: controls.picture.value,\n            quantity: controls.quantity.value\n        };\n\n        const response = await api.updateProductById(editableProductId, updateProduct);\n        console.log(response);\n        \n    };\n\n    const deleteHandler = async(id) => {\n        await api.deleteProductById(id)\n        .then(prod => window.location.reload(true))\n        .catch(err => console.log(err))\n    };\n\n    let form = [];\n\n    if(productsList.length > 0) {\n        let elementIndex;\n        productsList.map(product => {\n            for(let i = 0; i < productsList.length; i++) {\n                if(productsList[i].name === product.name) {\n                    elementIndex = i;\n                }}\n            form.push(\n                <div key={product._id} className='col' >\n                    <Card>\n                        <Card.Body>\n                            <Card.Text><strong>Name: </strong>{product.name}</Card.Text>\n                            <Card.Text><strong>Marca</strong>{product.brand}</Card.Text>\n                            <Card.Text><strong>Preço: R$ </strong>{product.price}</Card.Text>\n                            <Card.Text><strong>Quantidade: </strong>{product.quantity}</Card.Text>\n                            <Card.Text><strong>Categoria: </strong>{product.category}</Card.Text>\n                            <Card.Text><strong>Descrição:</strong> {product.description}</Card.Text>\n                            <Card.Text><strong>Link da imagem:</strong> {product.picture.toString()}</Card.Text>\n                        </Card.Body>\n                    </Card>\n                    <div className='col'>\n                        {!editFields ? \n                            <Button type='button' id={elementIndex} style={{margin: '10px'}} onClick={editHandler} className='btn btn-warning'>EDITAR</Button> :\n                            null\n                        }\n                    \n                        <Button style={{margin: '10px'}} onClick={(event) => deleteHandler(event.target.params.id)} className='btn btn-danger btn-space'>DELETE</Button>\n                    </div>\n                </div>\n            )\n        });\n    }\n    \n\n    return(\n        <div className='container'>\n            <div className='row'>\n                {editFields ? \n                    <form action=\"POST\" onSubmit={submitProductHandler}>\n                        {input}\n                        <Button type='submit' style={{margin: '10px'}} className='btn btn-info'>ENVIAR</Button>\n                    </form> : \n                    <div>{form}</div>}\n            </div>\n        </div>\n    ); \n});\n\nexport default productsController;","import React, { useState } from 'react';\nimport { Card, Button, ButtonGroup } from 'react-bootstrap';\n\nimport ProductsController from '../../components/Controller/Products/ProductsController';\nimport UsersController from '../../components/Controller/Users/UsersController';\nimport OrdersController from '../../components/Controller/Orders/OrdersController';\nimport Input from '../../components/UI/Input/Input';\nimport { updateObject } from '../../shared/utility';\nimport api from '../../api/index';\nimport Aux from '../../hoc/Aux/Aux';\n\nconst AdminDashboard = props => {\n    const [createProduct, setCreateProduct] = useState(false);\n    const [showProducts, setShowProducts] = useState(false);\n    const [showOrders, setShowOrders] = useState(false);\n    const [showUsers, setShowUsers] = useState(false);\n    const [productFields, setProductFields] = useState({\n        name: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Nome do Produto'\n            },\n            value: '',\n            valid: false,\n            touched: false\n        },\n        brand: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Marca ou Fabricante'\n            },\n            value: '',\n            valid: false,\n            touched: false\n        },\n        category: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Categoria'\n            },\n            value: '',\n            valid: false,\n            touched: false\n        },\n        price: {\n            elementType: 'number',\n            elementConfig: {\n                type: 'number',\n                placeholder: 'Preço de venda'\n            },\n            value: 0,\n            valid: false,\n            touched: false\n        },\n        quantity: {\n            elementType: 'number',\n            elementConfig: {\n                type: 'number',\n                placeholder: 'Quantidade de compra'\n            },\n            value: 0,\n            valid: false,\n            touched: false\n        },\n        description: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'textarea',\n                placeholder: 'Descrição do produto'\n            },\n            value: '',\n            valid: false,\n            touched: false\n        },\n        picture: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Link da imagem do produto'\n            },\n            value: '',\n            valid: false,\n            touched: false\n        },\n    })\n\n    const productsHandler = () => {\n        setShowProducts(!showProducts);\n        setShowOrders(false);\n        setShowUsers(false);\n    };\n\n    const usersHandler = () => {\n        setShowUsers(!showUsers);\n        setShowOrders(false);\n        setShowProducts(false);\n    };\n\n    const ordersHandler = () => {\n        setShowOrders(!showOrders);\n        setShowProducts(false);\n        setShowUsers(false);\n    };\n\n    const createHandler = () => {\n        setCreateProduct(!createProduct);\n    };\n\n    const inputChangedHandler = ( event, fieldName ) => {\n        const updatedFields = updateObject( productFields, {\n            [fieldName]: updateObject( productFields[fieldName], {\n                value: event.target.value,\n                })\n            });\n            setProductFields(updatedFields);\n        };\n\n    const submitHandler = async(event) => {\n        event.preventDefault();\n\n        let newProduct = {\n            name: productFields.name.value,\n            brand: productFields.brand.value, \n            description: productFields.description.value,\n            price: productFields.price.value, \n            quantity: productFields.quantity.value, \n            category: productFields.category.value,\n            picture: productFields.picture.value\n        }\n\n        const response = await api.insertProduct(newProduct);\n        if(response) {\n            setTimeout(window.alert('Product added!'), 1000);\n            setProductFields({});\n        }\n    };\n\n    const formElementsArray = [];\n    for ( let key in productFields ) {\n        formElementsArray.push( {\n            id: key,\n            config: productFields[key]\n        } );\n    };\n  \n    let form = formElementsArray.map( formElement => (\n        <Input\n            key={formElement.id}\n            elementType={formElement.config.elementType}\n            elementConfig={formElement.config.elementConfig}\n            invalid={!formElement.config.valid}\n            value={formElement.config.value}\n            touched={formElement.config.touched}\n            label={formElement.config.elementConfig.placeholder}\n            changed={( event ) => inputChangedHandler( event, formElement.id )} />\n    ));\n\n    return(\n        <Aux>\n        <div className='container'>\n            <div className='row'>\n            <div className='col-md-4 col-lg-6'>\n                    <Card style={{padding: '10px', margin: '10px'}}>\n                        <Card.Title><h5>Produtos</h5></Card.Title>\n                            <ButtonGroup>\n                                <Button onClick={() => productsHandler()} className='btn btn-primary'>Ver Produtos</Button>\n                                <Button onClick={() => createHandler()} className='btn btn-warning'>Novo Produto</Button>\n                            </ButtonGroup>\n                    </Card>\n               \n                    <Card style={{padding: '10px', margin: '10px'}}>\n                        <Card.Title><h5>Pedidos</h5></Card.Title>\n                        <Button onClick={() => ordersHandler()} variant='secondary'>Ver</Button>\n                    </Card>\n               \n                    <Card style={{padding: '10px', margin: '10px'}}>\n                        <Card.Title><h5>Usuários</h5></Card.Title>\n                        <Button onClick={() => usersHandler()} variant='primary'>Ver</Button>\n                    </Card>\n                </div>\n            \n            <div  className='col-md-4 col-lg-6'> \n                {createProduct && \n                    <form action='POST' onSubmit={submitHandler}>\n                        {form}\n                        <Button type='submit' className='btn btn-success'>ENVIAR</Button>\n                    </form> }\n            </div>\n            <div  className='col-md-4 col-lg-6'>\n                {showProducts && <ProductsController />}\n            </div>\n            <div  className='col-md-4 col-lg-6'>\n                {showUsers && <UsersController />}\n            </div>\n            <div  className='col-md-4 col-lg-6'>\n                {showOrders && <OrdersController />}\n            </div>\n            </div>\n        </div>\n        </Aux>\n    );\n};\n\n  export default AdminDashboard;"],"sourceRoot":""}