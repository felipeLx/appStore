{"version":3,"sources":["containers/Dashboard/UserDashboard.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css","components/Controller/Products/ProductsController.js","components/Controller/Users/UsersController.js","components/Controller/Orders/OrdersController.js"],"names":["UserDashboard","useState","showOrders","setShowOrders","showUser","setShowUser","className","Title","onClick","variant","input","props","inputElement","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","join","elementConfig","value","onChange","changed","options","map","option","key","displayValue","Input","Label","label","module","exports","productsController","React","memo","editFields","setEditFields","productsList","setProductsList","id","setId","name","type","placeholder","brand","description","price","category","controls","setControls","useEffect","api","getAllProducts","then","products","data","catch","err","console","log","sendEditedHandler","a","updateProduct","product","updateProductById","prod","window","location","reload","deleteHandler","deleteProductById","form","_id","Img","src","picture","Body","Text","formElementsArray","config","formElement","event","controlName","updatedControls","updateObject","target","valid","checkValidity","validation","inputChangedHandler","index","params","usersController","usersList","setUsersList","getAllUsers","users","editHandler","updateUserById","deleteUserById","user","username","email","orderId","dataCreated","ordersController","ordersList","setOrdersList","getAllOrders","orders","updateOrderById","ord","deleteOrderById","order","userId","productId"],"mappings":"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","file":"static/js/6.c8b9346d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Card, Button, Form, ButtonGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nimport ProductsController from '../../components/Controller/Products/ProductsController';\nimport UsersController from '../../components/Controller/Users/UsersController';\nimport OrdersController from '../../components/Controller/Orders/OrdersController';\n\nconst UserDashboard = () => {\n    const [showOrders, setShowOrders] = useState(false);\n    const [showUser, setShowUser] = useState(false);\n\n    const userHandler = () => {\n        setShowUser(!showUser);\n        setShowOrders(false);\n    };\n\n    const ordersHandler = () => {\n        setShowOrders(!showOrders);\n        setShowUser(false);\n    };\n\n    let form = '';\n\n    const createUserHandler = () => {\n        console.log('createUserHandler = Dashboard');   \n    };\n    \n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <div  className=\"col-md-4 col-lg-2\">\n                    <Card>\n                        <Card.Title>Pedidos</Card.Title>\n                        <Button onClick={() => ordersHandler()} variant=\"secondary\">Ver</Button>\n                    </Card>\n                </div>\n                <div className=\"col-md-4 col-lg-2\">\n                    <Card>\n                        <Card.Title>Usu√°rios</Card.Title>\n                        <Button onClick={() => userHandler()} variant=\"primary\">Ver</Button>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row\">\n                {showUser && <UsersController />}\n            </div>\n            <div className=\"row\">\n                {showOrders && <OrdersController />}\n            </div>\n        </div>\n    );\n};\n\nexport default UserDashboard;","import React from 'react';\n\nimport classes from './Input.module.css';\n\nconst input = ( props ) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch ( props.elementType ) {\n        case ( 'input' ):\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'textarea' ):\n            inputElement = <textarea\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'select' ):\n            inputElement = (\n                <select\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n\n};\n\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","import React, { useEffect, useState } from 'react';\nimport { Card, Button } from 'react-bootstrap';\n\nimport api from '../../../api/index';\nimport Input from '../../UI/Input/Input';\nimport { updateObject, checkValidity } from '../../../shared/utility';\n\nconst productsController = React.memo(props => {\n\n    const [editFields, setEditFields] = useState(false); \n    const [productsList, setProductsList] = useState([]);\n    const [id, setId] = useState('');\n    const [controls, setControls] = useState({\n        name: {\n          elementType: 'input',\n          elementConfig: {\n              type: 'text',\n              placeholder: 'Nome do produto'\n          },\n          value: ''\n        },\n        brand: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Marca ou fabricante'\n            },\n            value: ''\n          },\n        description: {\n            elementType: 'textarea',\n            elementConfig: {\n                type: 'textarea',\n                placeholder: 'Descri√ß√£o do produto'\n            },\n            value: ''\n          },\n        price: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Pre√ßo de venda'\n            },\n            value: ''\n          },\n        category: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Categoria'\n            },\n            value: ''\n          }\n    });\n    \n    useEffect(() => {\n        api.getAllProducts()\n            .then(products => {\n                setProductsList(products.data);\n            })\n            .catch(err => console.log(err));\n    }, []);\n\n    const editHandler = () => {\n        \n        setEditFields(!editFields);\n        setId(productsList[0]._id);\n        setControls({\n            name: {\n                value: productsList[0].product \n            },\n            brand: {\n                value: productsList[0].brand \n            },\n            category: {\n                value: productsList[0].category \n            },\n            price: {\n                value: productsList[0].price\n            },\n            description: {\n                value: productsList[0].description\n            },\n        });\n    };\n\n    const sendEditedHandler = async() => {\n        const updateProduct = {\n            product: controls.name.value,\n            brand: controls.brand.value,\n            category: controls.category.value,\n            price: controls.price.value,\n            description: controls.description.value,\n        };\n\n        await api.updateProductById(id, updateProduct )\n            .then(prod => window.location.reload(true))\n            .catch(err => console.log(err))\n    };\n\n    const deleteHandler = async(id) => {\n        await api.deleteProductById(id)\n        .then(prod => window.location.reload(true))\n        .catch(err => console.log(err))\n    };\n\n    let form = productsList.map(product => (\n            <Card key={product._id} className=\"card\">\n                <Card.Img className=\"card-img-top\" variant=\"top\" src={product.picture} />\n                <Card.Body className=\"card-body\">\n                    <Card.Text><strong>Name: </strong>{product.product}</Card.Text>\n                    <Card.Text><strong>Marca</strong>{product.brand}</Card.Text>\n                    <Card.Text><strong>Pre√ßo: </strong>{product.price}</Card.Text>\n                    <Card.Text><strong>Categoria: </strong>{product.category}</Card.Text>\n                    <Card.Text><strong>Descri√ß√£o:</strong> {product.description}</Card.Text>\n                </Card.Body>\n            </Card>\n\n    ));\n\n    const inputChangedHandler = ( event, controlName ) => {\n        const updatedControls = updateObject( controls, {\n            [controlName]: updateObject( controls[controlName], {\n                value: event.target.value,\n                valid: checkValidity( event.target.value, controls[controlName].validation ),\n                touched: true\n                })\n            });\n            setControls(updatedControls);\n        };\n  \n    const formElementsArray = [];\n        for ( let key in controls ) {\n            formElementsArray.push( {\n                id: key,\n                config: controls[key]\n            } );\n    };\n\n    if(editFields) {\n        form = formElementsArray.map( formElement => (\n                <Input  \n                    key={formElement.config.value}\n                    label={formElement.id}\n                    value={formElement.config.value}\n                    changed={( event ) => inputChangedHandler( event, formElement.id )} />\n            )\n        )       \n    };\n    \n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <form>\n                  {form}\n                    <div className=\"col\">\n                        {!editFields ? \n                            <Button onClick={(index) => editHandler(index)} className=\"btn btn-warning\">EDITAR</Button> :\n                            <Button onClick={() => sendEditedHandler()} className=\"btn btn-info\">ENVIAR</Button>\n                        }\n                    </div>\n                    <div className=\"col\">\n                        <Button onClick={(event) => deleteHandler(event.target.params.id)} className=\"btn btn-danger btn-space\">DELETE</Button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    ); \n});\n\nexport default productsController;","import React, { useEffect, useState } from 'react';\nimport { Card, Button, ButtonGroup } from 'react-bootstrap';\n\nimport api from '../../../api/index';\n// import Spinner from '../../UI/Spinner/Spinner';\n// import { updateObject } from '../../../shared/utility';\n\nconst usersController = React.memo(props => {\n\n    const [usersList, setUsersList] = useState([]);\n    // const [controls, setControls] = useState({\n    //     name: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'text',\n    //             placeholder: 'Nome do produto'\n    //         },\n    //         value: ''\n    //     },\n    //     brand: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'text',\n    //             placeholder: 'Marca'\n    //         },\n    //         value: ''\n    //     },\n    //     category: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'text',\n    //             placeholder: 'Categoria'\n    //         },\n    //         value: ''\n    //     },\n    //     price: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'text',\n    //             placeholder: 'Pre√ßo'\n    //         },\n    //         value: ''\n    //     },\n    //     description: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'textarea',\n    //             placeholder: 'Descri√ß√£o'\n    //         },\n    //         value: ''\n    //     },\n    // });\n    \n    useEffect(() => {\n        api.getAllUsers()\n            .then(users => {\n                setUsersList(users.data);\n            })\n            .catch(err => console.log(err));\n    }, []);\n    \n\n    const editHandler = async(id) => {\n        await api.updateUserById(id)\n            .then(prod => console.log('updated'))\n            .catch(err => console.log(err))\n    };\n\n    const deleteHandler = async(id) => {\n        await api.deleteUserById(id)\n        .then(prod => console.log('deleted'))\n        .catch(err => console.log(err))\n    };\n\n    // const createHandler = async() => {\n\n    //     return <p>create new product</p>\n    // };\n\n    // const inputChangedHandler = ( event, controlName ) => {\n    //     const updatedControls = updateObject( controls, {\n    //         [controlName]: updateObject( controls[controlName], {\n    //             value: event.target.value,\n    //             })\n    //         });\n    //         setControls(updatedControls);\n    //     };\n\n    // const submitHandler = ( event ) => {\n    //     event.preventDefault();\n    //     console.log('submitHandler - productsController');\n        \n    // };\n        \n\n    // const formElementsArray = [];\n    // for ( let key in controls ) {\n    //     formElementsArray.push( {\n    //         id: key,\n    //         config: controls[key]\n    //     } );\n    // };\n\n    // let form = formElementsArray.map( formElement => (\n    //     <Input\n    //         key={formElement.id}\n    //         elementType={formElement.config.elementType}\n    //         elementConfig={formElement.config.elementConfig}\n    //         value={formElement.config.value}\n    //         changed={( event ) => inputChangedHandler( event, formElement.id )} />\n    // ));\n\n    let form = usersList.map(user => (\n        <Card key={user._id} className=\"card\">\n            <Card.Body className=\"card-body\">\n                <Card.Text><strong>ID:</strong> {user._id}</Card.Text>\n                <Card.Text><strong>Username:</strong> {user.username}</Card.Text>\n                <Card.Text><strong>Email:</strong> {user.email}</Card.Text>\n                <Card.Text><strong>OrderId:</strong> {user.orderId}</Card.Text>\n                <Card.Text><strong>Date:</strong> {user.dataCreated}</Card.Text>\n            </Card.Body>\n            <ButtonGroup>\n                <Button onClick={(event) => editHandler(event.target.params.id)} className=\"btn btn-info btn-space\">EDIT</Button>\n                <Button onClick={(event) => deleteHandler(event.target.params.id)} className=\"btn btn-danger btn-space\">DELETE</Button>\n            </ButtonGroup>\n                    \n        </Card>\n\n    ));\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <form>\n                  {form}\n                </form>\n            </div>\n        </div>\n    );\n    \n});\n\nexport default usersController;","import React, { useEffect, useState } from 'react';\nimport { Card, Button, ButtonGroup } from 'react-bootstrap';\n\nimport api from '../../../api/index';\n// import Input from '../../UI/Input/Input';\n// import { updateObject } from '../../../shared/utility';\n\nconst ordersController = React.memo(props => {\n\n    const [ordersList, setOrdersList] = useState([]);\n    // const [controls, setControls] = useState({\n    //     name: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'text',\n    //             placeholder: 'Nome do produto'\n    //         },\n    //         value: ''\n    //     },\n    //     brand: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'text',\n    //             placeholder: 'Marca'\n    //         },\n    //         value: ''\n    //     },\n    //     category: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'text',\n    //             placeholder: 'Categoria'\n    //         },\n    //         value: ''\n    //     },\n    //     price: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'text',\n    //             placeholder: 'Pre√ßo'\n    //         },\n    //         value: ''\n    //     },\n    //     description: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'textarea',\n    //             placeholder: 'Descri√ß√£o'\n    //         },\n    //         value: ''\n    //     },\n    // });\n    \n    useEffect(() => {\n        api.getAllOrders()\n            .then(orders => {\n                setOrdersList(orders.data);\n            })\n            .catch(err => console.log(err));\n    }, []);\n    \n\n    const editHandler = async(id) => {\n        await api.updateOrderById(id)\n            .then(ord => console.log('edited'))\n            .catch(err => console.log(err))\n    };\n\n    const deleteHandler = async(id) => {\n        await api.deleteOrderById(id)\n        .then(ord => console.log('deleted'))\n        .catch(err => console.log(err))\n    };\n\n    // const createHandler = async() => {\n\n    //     return <p>create new product</p>\n    // };\n\n    // const inputChangedHandler = ( event, controlName ) => {\n    //     const updatedControls = updateObject( controls, {\n    //         [controlName]: updateObject( controls[controlName], {\n    //             value: event.target.value,\n    //             })\n    //         });\n    //         setControls(updatedControls);\n    //     };\n\n    // const submitHandler = ( event ) => {\n    //     event.preventDefault();\n    //     console.log('submitHandler - productsController');\n        \n    // };\n        \n\n    // const formElementsArray = [];\n    // for ( let key in controls ) {\n    //     formElementsArray.push( {\n    //         id: key,\n    //         config: controls[key]\n    //     } );\n    // };\n\n    // let form = formElementsArray.map( formElement => (\n    //     <Input\n    //         key={formElement.id}\n    //         elementType={formElement.config.elementType}\n    //         elementConfig={formElement.config.elementConfig}\n    //         value={formElement.config.value}\n    //         changed={( event ) => inputChangedHandler( event, formElement.id )} />\n    // ));\n    let form = ordersList.map(order => (\n        <Card key={order._id} className=\"card\">\n            <Card.Body className=\"card-body\">\n                <Card.Text><strong>ID:</strong> {order._id}</Card.Text>\n                <Card.Text><strong>UserId:</strong> {order.userId}</Card.Text>\n                <Card.Text><strong>ProductId:</strong> {order.productId}</Card.Text>\n            </Card.Body>\n            <ButtonGroup>\n                <Button onClick={(event) => editHandler(event.target.params.id)} className=\"btn btn-info btn-space\">EDIT</Button>\n                <Button onClick={(event) => deleteHandler(event.target.params.id)} className=\"btn btn-danger btn-space\">DELETE</Button>\n            </ButtonGroup>\n        </Card>\n\n    ));\n\n    return(\n        <div className=\"container\">\n            <div className=\"col\">\n                \n                <form>\n                  {form}\n                </form>\n            </div>\n        </div>\n    );\n    \n});\n\nexport default ordersController;"],"sourceRoot":""}