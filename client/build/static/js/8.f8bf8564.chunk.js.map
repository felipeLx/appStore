{"version":3,"sources":["components/Controller/Orders/OrderController.js"],"names":["orderController","React","memo","props","useState","orderList","useEffect","getOrderHandler","a","api","getOrderById","userId","then","order","console","log","catch","err","checkedOrder","editHandler","id","updateUserById","prod","deleteHandler","deleteUserById","form","map","key","_id","className","Body","Text","productId","type","onClick","event","target","params","connect","state","auth"],"mappings":"qMAMMA,EAAkBC,IAAMC,MAAK,SAAAC,GAAU,IAAD,EAENC,mBAAS,IAFH,mBAEjCC,EAFiC,UAIxCC,qBAAU,WACNC,MACD,IAEH,IAAMA,EAAe,uCAAG,4BAAAC,EAAA,sEACOC,IAAIC,aAAaP,EAAMQ,QACjCC,MAAK,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAC1BG,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MAHtB,OACdC,EADc,OAIpBJ,QAAQC,IAAIG,GAJQ,2CAAH,qDAOfC,EAAW,uCAAG,WAAMC,GAAN,SAAAZ,EAAA,sEACVC,IAAIY,eAAeD,GACpBR,MAAK,SAAAU,GAAI,OAAIR,QAAQC,IAAI,cACzBC,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MAHd,2CAAH,sDAMXM,EAAa,uCAAG,WAAMH,GAAN,SAAAZ,EAAA,sEACZC,IAAIe,eAAeJ,GACxBR,MAAK,SAAAU,GAAI,OAAIR,QAAQC,IAAI,cACzBC,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MAHR,2CAAH,sDAMfQ,EAAOpB,EAAUqB,KAAI,SAAAb,GAAK,OAC1B,kBAAC,IAAD,CAAMc,IAAKd,EAAMe,IAAKC,UAAU,QAC5B,kBAAC,IAAKC,KAAN,CAAWD,UAAU,aACjB,kBAAC,IAAKE,KAAN,KAAW,uCAAX,IAAiClB,EAAMe,KACvC,kBAAC,IAAKG,KAAN,KAAW,+CAAX,IAAyClB,EAAMmB,YAEnD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,KAAK,SAASC,QAAS,SAACC,GAAD,OAAWhB,EAAYgB,EAAMC,OAAOC,OAAOjB,KAAKS,UAAU,0BAAzF,QACA,kBAAC,IAAD,CAAQI,KAAK,SAASC,QAAS,SAACC,GAAD,OAAWZ,EAAcY,EAAMC,OAAOC,OAAOjB,KAAKS,UAAU,4BAA3F,eAOZ,OACI,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,8BACGJ,QAcJa,uBANS,SAAAC,GACpB,MAAO,CACH5B,OAAQ4B,EAAMC,KAAK7B,UAIZ2B,CAAyBtC","file":"static/js/8.f8bf8564.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, Button, ButtonGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nimport api from '../../../api/index';\n\nconst orderController = React.memo(props => {\n\n    const [orderList, setOrderList] = useState([]);\n\n    useEffect(() => {\n        getOrderHandler();\n    }, []);\n    \n    const getOrderHandler = async() => {\n        const checkedOrder = await api.getOrderById(props.userId)\n                        .then(order => console.log(order))\n                        .catch(err => console.log(err));\n        console.log(checkedOrder);\n    };\n\n    const editHandler = async(id) => {\n        await api.updateUserById(id)\n            .then(prod => console.log('updated'))\n            .catch(err => console.log(err))\n    };\n\n    const deleteHandler = async(id) => {\n        await api.deleteUserById(id)\n        .then(prod => console.log('deleted'))\n        .catch(err => console.log(err))\n    };\n\n    let form = orderList.map(order => (\n        <Card key={order._id} className=\"card\">\n            <Card.Body className=\"card-body\">\n                <Card.Text><strong>ID:</strong> {order._id}</Card.Text>\n                <Card.Text><strong>Produto Id:</strong> {order.productId}</Card.Text>\n            </Card.Body>\n            <ButtonGroup>\n                <Button type=\"button\" onClick={(event) => editHandler(event.target.params.id)} className=\"btn btn-info btn-space\">EDIT</Button>\n                <Button type=\"button\" onClick={(event) => deleteHandler(event.target.params.id)} className=\"btn btn-danger btn-space\">DELETE</Button>\n            </ButtonGroup>\n                    \n        </Card>\n\n    ));\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <form>\n                  {form}\n                </form>\n            </div>\n        </div>\n    );\n    \n});\n\nconst mapStateToProps = state => {\n    return {\n        userId: state.auth.userId\n    };\n  };\n\nexport default connect(mapStateToProps)(orderController);"],"sourceRoot":""}