{"version":3,"sources":["store/actions/product.js","store/actions/order.js","store/actions/auth.js","store/actions/actionTypes.js","components/Navigation/SideDrawer/SideDrawer.module.css","api/index.js","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Product/Product.module.css","hoc/Layout/Layout.module.css","assets/images/logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","shared/utility.js","registerServiceWorker.js","hoc/Aux/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","containers/Products/ProductsBuilder.js","containers/Auth/Logout/Logout.js","components/Product/Product.js","App.js","store/reducers/product.js","store/reducers/order.js","store/reducers/auth.js","store/reducers/signup.js","store/sagas/auth.js","store/sagas/product.js","store/sagas/order.js","store/sagas/index.js","index.js"],"names":["setProducts","products","type","actionTypes","fetchProductsFailed","purchaseProductSuccess","id","orderData","orderId","purchaseProductFail","error","purchaseProductStart","fetchOrdersSuccess","orders","fetchOrdersFail","fetchOrdersStart","authStart","adminSuccess","token","userId","authSuccess","authFail","logout","logoutSucceed","login","email","password","authCheckState","signup","username","setSignupRedirectPath","path","signupStart","signupSuccess","signupFail","ADD_PRODUCT","REMOVE_PRODUCT","SET_PRODUCTS","FETCH_PRODUCTS_FAILED","INIT_PRODUCTS","PURCHASE_PRODUCT","PURCHASE_PRODUCT_START","PURCHASE_PRODUCT_SUCCESS","PURCHASE_PRODUCT_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","FETCH_ORDERS","AUTH_USER","AUTH_CHECK_STATE","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_CHECK_TIMEOUT","AUTH_INITIATE_LOGOUT","AUTH_LOGOUT","SIGNUP_USER","SIGNUP_START","SIGNUP_SUCCESS","SIGNUP_FAIL","ADMIN_SUCCESS","SET_SIGNUP_REDIRECT_PATH","module","exports","api","axios","create","baseURL","apis","insertProduct","payload","post","getAllProducts","get","getOneProduct","updateProductById","put","deleteProductById","delete","insertOrder","getAllOrders","getOrderById","updateOrderById","deleteOrderById","registerUser","loginUser","logoutUser","getAllUsers","getUserById","updateUserById","deleteUserById","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","Aux","props","children","logo","className","classes","Logo","style","height","src","brandLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","isAuthenticated","isAdmin","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","NavigationItems","isAuth","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","layout","React","memo","useState","showSideDrawer","setShowSideDrawer","Content","connect","auth","ProductsBuilder","productsList","setProductsList","orderQuantity","setOrderQuantity","setOrder","useEffect","getAllHandler","a","data","err","closeOrderHandler","event","preventDefault","total","price","newOrder","productId","_id","order","renderProducts","product","key","Card","width","Img","variant","picture","Body","Title","Text","category","Button","quantity","lessHandler","map","onLogout","dispatch","actions","setProduct","params","card","Subtitle","description","brand","ButtonGroup","Buttons","Link","href","Product","AdminDashboard","lazy","UserDashboard","ProductsController","OrdersController","UsersController","OrderController","UserController","Signup","Login","app","onTryAutoSignup","routes","render","component","Logout","Layout","fallback","withRouter","initialState","totalPrice","building","PRODUCTS_PRICES","borracha","addProduct","action","updatedProduct","productName","updatedState","removeProduct","updatedProd","updatedSt","reducer","loading","purchased","purchaseInit","concat","authRedirectPath","authLogout","setAuthRedirectPath","logoutSaga","checkAuthTimeoutSaga","registerUserSaga","loginUserSaga","authCheckStateSaga","delayAsync","ms","Promise","res","setTimeout","call","localStorage","delay","Date","getTime","authData","response","loginData","getItem","initProductsSaga","purchaseProductSaga","fetchOrdersSaga","name","queryParams","fetchedOrders","push","watchAuth","watchProductBuilder","watchOrder","all","takeEvery","actionType","takeLatest","composeEnhancers","compose","rootReducer","combineReducers","productBuilder","productBuilderReducer","orderReducer","authReducer","signupReducer","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","thunk","run","App","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.01b3d4fc.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes';\n\n\nexport const addProduct = ( name ) => {\n    return {\n        type: actionTypes.ADD_PRODUCT,\n        productName: name\n    };\n};\n\nexport const removeProduct = ( name ) => {\n    return {\n        type: actionTypes.REMOVE_PRODUCT,\n        productName: name\n    };\n};\n\nexport const setProducts = ( products ) => {\n    return {\n        type: actionTypes.SET_PRODUCTS,\n        products: products\n    };\n};\n\nexport const fetchProductsFailed = () => {\n    return {\n        type: actionTypes.FETCH_PRODUCTS_FAILED\n    };\n};\n\nexport const initProducts = () => {\n    return {\n        type: actionTypes.INIT_PRODUCTS\n    };\n};","import * as actionTypes from './actionTypes';\n\nexport const purchaseProductSuccess = ( id, orderData ) => {\n    return {\n        type: actionTypes.PURCHASE_PRODUCT_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    };\n};\n\nexport const purchaseProductFail = ( error ) => {\n    return {\n        type: actionTypes.PURCHASE_PRODUCT_FAIL,\n        error: error\n    };\n}\n\nexport const purchaseProductStart = () => {\n    return {\n        type: actionTypes.PURCHASE_PRODUCT_START\n    };\n};\n\nexport const purchaseProduct = ( orderData, token ) => {\n    return {\n        type: actionTypes.PURCHASE_PRODUCT,\n        orderData: orderData,\n        token: token\n    }\n};\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    };\n};\n\nexport const fetchOrdersSuccess = ( orders ) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    };\n};\n\nexport const fetchOrdersFail = ( error ) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    };\n};\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    };\n};\n\nexport const fetchOrders = (token, userId) => {\n    return {\n        type: actionTypes.FETCH_ORDERS,\n        token: token,\n        userId: userId\n    }\n};","import * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const adminSuccess = (token,id) => {\n    return {\n        type: actionTypes.ADMIN_SUCCESS,\n        token: token,\n        userId: id\n    };\n};\n\nexport const authSuccess =  (token, id) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token,\n        userId: id\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const logout = () => {\n    return {\n        type: actionTypes.AUTH_INITIATE_LOGOUT\n    };\n};\n\nexport const logoutSucceed = () => {\n    return {type: actionTypes.AUTH_LOGOUT};\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return {\n        type: actionTypes.AUTH_CHECK_TIMEOUT,\n        expirationTime: expirationTime\n    }\n};\n\nexport const login = (email, password) => {\n    return {\n        type: actionTypes.AUTH_USER,\n        email: email,\n        password: password,\n    };\n};\n\nexport const authCheckState = () => {\n    return {\n        type: actionTypes.AUTH_CHECK_STATE\n    };\n};\n\nexport const signup = (username, email, password) => {\n    return {\n        type: actionTypes.SIGNUP_USER,\n        username: username,\n        email: email,\n        password: password\n    }\n};\n\nexport const setSignupRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_SIGNUP_REDIRECT_PATH,\n        path: path\n    }\n};\n\nexport const signupStart = () => {\n    return {\n        type: actionTypes.SIGNUP_START\n    };\n};\n\nexport const signupSuccess = (token, id) => {\n    return {\n        type: actionTypes.SIGNUP_SUCCESS,\n        token: token,\n        userId: id\n    };\n};\n\nexport const signupFail = (error) => {\n    return {\n        type: actionTypes.SIGNUP_FAIL,\n        error: error\n    };\n};","export const ADD_PRODUCT = 'ADD_PRODUCT';\nexport const REMOVE_PRODUCT = 'REMOVE_PRODUCT';\nexport const SET_PRODUCTS = 'SET_PRODUCTS';\nexport const FETCH_PRODUCTS_FAILED = 'FETCH_PRODUCTS_FAILED';\nexport const INIT_PRODUCTS = 'INIT_PRODUCTS';\n\nexport const PURCHASE_PRODUCT = 'PURCHASE_PRODUCT';\nexport const PURCHASE_PRODUCT_START = 'PURCHASE_PRODUCT_START';\nexport const PURCHASE_PRODUCT_SUCCESS = 'PURCHASE_PRODUCT_SUCCESS';\nexport const PURCHASE_PRODUCT_FAIL = 'PURCHASE_PRODUCT_FAIL';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\nexport const FETCH_ORDERS = 'FETCH_ORDERS'\n\nexport const AUTH_USER = 'AUTH_USER';\nexport const AUTH_CHECK_STATE = 'AUTH_CHECK_STATE';\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_CHECK_TIMEOUT = 'AUTH_CHECK_TIMEOUT';\nexport const AUTH_INITIATE_LOGOUT = 'AUTH_INITIATE_LOGOUT';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const SIGNUP_USER = 'SIGNUP_USER';\nexport const SIGNUP_START = 'SIGNUP_START';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\n\nexport const ADMIN_SUCCESS = 'ADMIN_SUCCESS';\n\nexport const SET_SIGNUP_REDIRECT_PATH = 'SET_SIGNUP_REDIRECT_PATH';","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: '/',\n});\n\n// Products\nexport const insertProduct = payload => api.post('/api', payload);\nexport const getAllProducts = () => api.get('/api');\nexport const getOneProduct = id => api.get(`/api/${id}`); \nexport const updateProductById = (id, payload) => api.put(`/api/${id}`, payload);\nexport const deleteProductById = id => api.delete(`/api/${id}`);\n\n// Orders\nexport const insertOrder = payload => api.post('/order', payload);\nexport const getAllOrders = () => api.get('/order');\nexport const getOrderById = id => api.get(`/order/${id}`);\nexport const updateOrderById = (id, payload) => api.put(`/order/${id}`, payload);\nexport const deleteOrderById = id => api.delete(`/order/${id}`);\n\n// Users\nexport const registerUser = payload => api.post('/user/signup', payload);\nexport const loginUser = payload => api.post('/user/login', payload);\nexport const logoutUser = () => api.post('/user/logout');\nexport const getAllUsers = () => api.get('/user');\nexport const getUserById = id => api.get(`/user/${id}`);\nexport const updateUserById = (id, payload) => api.put(`/user/${id}`, payload);\nexport const deleteUserById = id => api.delete(`/user/${id}`);\n\nconst apis = {\n    insertProduct,\n    getAllProducts,\n    getOneProduct,\n    updateProductById,\n    deleteProductById,\n    insertOrder,\n    getAllOrders,\n    getOrderById,\n    updateOrderById,\n    deleteOrderById,\n    registerUser,\n    loginUser,\n    logoutUser,\n    getAllUsers,\n    getUserById,\n    updateUserById,\n    deleteUserById,\n};\n\nexport default apis;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Product\":\"Product_Product__JR_rA\",\"Buttons\":\"Product_Buttons__3Ysq6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","module.exports = __webpack_public_path__ + \"static/media/logo.302eb1dc.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};\n\nexport const checkValidity = (value, rules) => {\n    let isValid = true;\n    if (!rules) {\n        return true;\n    }\n    \n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid\n    }\n\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid\n    }\n\n    if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    return isValid;\n};","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const Aux = props => props.children;\n\nexport default Aux;","import React from 'react';\n\nimport brandLogo from '../../assets/images/logo.png';\nimport classes from './Logo.module.css';\n\nconst logo = (props) => (\n    <div className={classes.Logo} style={{height: props.height}}>\n        <img src={brandLogo} alt=\"MyLogo\" />\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport classes from './NavigationItem.module.css';\n\nconst navigationItem = ( props ) => (\n    <li className={classes.NavigationItem}>\n        <NavLink \n            to={props.link}\n            exact={props.exact}\n            activeClassName={classes.active}>{props.children}</NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\n\nimport classes from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = (props) => {\n\n    return(\n        <ul className={classes.navigationItems}>\n            <NavigationItem link=\"/\" exact>Produtos</NavigationItem>\n            {props.isAuthenticated && !props.isAdmin\n                ? <NavigationItem link=\"/dashboard\">Dashboard</NavigationItem>\n                : null }\n            {props.isAdmin && props.isAuthenticated\n                ? <NavigationItem link=\"/dashboard\">Dashboard</NavigationItem>\n                : null}\n            {!props.isAuthenticated\n                ? <NavigationItem link=\"/user/login\">Login</NavigationItem>\n                : <NavigationItem link=\"/user/logout\">Logout</NavigationItem>}\n        </ul>\n    );  \n};\n\nexport default navigationItems;","import React from 'react';\n\nimport classes from './DrawerToggle.module.css';\n\nconst drawerToggle = (props) => (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\n\nimport classes from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = ( props ) => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.drawerToggleClicked} />\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems isAuthenticated={props.isAuth} isAdmin={props.isAdmin} />\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React from 'react';\n\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.module.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\n\nconst sideDrawer = ( props ) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')} onClick={props.closed} >\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems isAuthenticated={props.isAuth} />\n                </nav>\n            </div>\n        </Aux>\n    );\n};\n\nexport default sideDrawer;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport Aux from '../Aux/Aux';\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nconst layout = React.memo(props => {\n    const [showSideDrawer, setShowSideDrawer] = useState(false);\n\n    const sideDrawerClosedHandler = () => {\n        setShowSideDrawer(false);\n    }\n\n    const sideDrawerToggleHandler = () => {\n        setShowSideDrawer(!showSideDrawer);\n    }\n\n        return (\n            <Aux>\n                <Toolbar\n                    isAuth={props.isAuthenticated}\n                    isAdmin={props.isAdmin} \n                    drawerToggleClicked={sideDrawerToggleHandler} />\n                <SideDrawer\n                    isAuth={props.isAuthenticated} \n                    isAdmin={props.isAdmin} \n                    open={showSideDrawer}\n                    closed={sideDrawerClosedHandler} />\n                <main className={classes.Content}>\n                    {props.children}\n                </main>\n            </Aux>\n        )\n});\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.signup.token !== null || state.auth.token !== null,\n        isAdmin: state.auth.isAdmin\n    };\n};\n\nexport default connect (mapStateToProps) (layout);","import React, { useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {Card, Button} from 'react-bootstrap';\n\nimport api from '../../api/index';\nimport Aux from '../../hoc/Aux/Aux';\n\nconst ProductsBuilder = () => {\n\n    const [productsList, setProductsList] = useState([]);\n    const [orderQuantity, setOrderQuantity] = useState(0);\n    const [setOrder] = useState([]);\n\n    useEffect(() => {\n        \n        getAllHandler();\n        \n    }, []);\n\n    const getAllHandler = async() => {\n        await api.getAllProducts()\n            .then(products => {\n                setProductsList(products.data);\n            })\n            .catch(err => console.log(err));\n    };\n    \n    const addHandler = () => {\n        let quantity = orderQuantity + 1;\n        setOrderQuantity(quantity);\n    };\n\n    const lessHandler = () => {\n        let quantity = orderQuantity - 1;\n        if(quantity <= 0) {\n            quantity = 0;\n        }\n        setOrderQuantity(quantity);\n    };\n\n    const closeOrderHandler = async(event) => {\n        event.preventDefault();\n        \n        let total = orderQuantity * productsList[0].price;\n        let newOrder = {\n            total: total,\n            userId: 1,\n            productId: productsList[0]._id,\n        }\n        await api.insertOrder(newOrder)\n            .then(order => {\n                setOrder(order);\n            })\n            .catch(err => console.log(err));\n    };\n\n    const renderProducts = (product) => {\n        return (\n            <div key={product._id} className=\"col col-sm-6 col-lg-4 li\">\n                 <Card className=\"card\" style={{ width: '18rem' }}>\n                    <Card.Img className=\"card-img-top\" variant=\"top\" src={product.picture} />\n                    <Card.Body className=\"card-body\">\n                        <Card.Title>Produto: {product.product}</Card.Title>\n                        <NavLink to={`/api/${product._id}`} className=\"btn btn-primary\">Detalhe</NavLink>\n                        <hr />\n                        <Card.Text>\n                        Categoria: {product.category}\n                        </Card.Text>\n                        <Card.Text> \n                        R$ {product.price}\n                        </Card.Text>\n                        <Card.Text>\n                        Quantidade: {orderQuantity}\n                        </Card.Text>\n                        <Card.Text>\n                            <Button onClick={() => lessHandler()} className=\"btn btn-danger\">-</Button>\n                            <Button onClick={() => addHandler()} className=\"btn btn-primary\">+</Button>\n                        </Card.Text>\n                        <Card.Text>\n                        <Button onClick={(event) => closeOrderHandler(event)} className=\"btn btn-info\">Adicionar ao pedido</Button>\n                        </Card.Text>\n                    </Card.Body>\n                    </Card>\n            </div>\n        );\n    };\n    \n    return (\n        <div>\n            <Aux>\n                <hr />\n                <div className=\"container cards\">\n                    <div className=\"row\">\n                        {productsList.map(product => {\n                            return renderProducts(product);\n                        })}\n                    \n                    </div>\n                </div>\n                \n            </Aux>\n        </div>\n    );\n};\n\nexport default ProductsBuilder;\n","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../../store/actions/index';\n\nconst logout = React.memo(props => {\n    \n    const { onLogout } = props;\n    useEffect(() => {\n        onLogout();\n    }, [onLogout]);\n\n        return <Redirect to=\"/\" />;\n});\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actions.logout())\n    };\n}\n\nexport default connect(null, mapDispatchToProps) (logout);","// product that will be render in the scream\nimport React, { useState, useEffect } from 'react';\nimport { Card, Button, ButtonGroup } from 'react-bootstrap';\n\nimport api from '../../api/index';\nimport Aux from '../../hoc/Aux/Aux';\nimport classes from './Product.module.css';\n\nconst product = React.memo(props => {\n    const [product, setProduct] = useState({});\n    const [orderQuantity, setOrderQuantity] = useState(0);\n\n    const productId = props.match.params.id;\n    useEffect(() => {\n        api.getOneProduct(productId)\n                .then(product => {\n                    setProduct(product.data);\n                })\n                .catch(err => console.log(err));\n    }, [productId]);\n\n    const addHandler = () => {\n        let quantity = orderQuantity + 1;\n        setOrderQuantity(quantity);\n    };\n\n    const lessHandler = () => {\n        let quantity = orderQuantity - 1;\n        if(quantity <= 0) {\n            quantity = 0;\n        }\n        setOrderQuantity(quantity);\n    };\n        let card = (\n            <div key={product._id} className=\"col col-md-4 col-lg-2\">\n                <Card className=\"card\" style={{ width: '1000%' }}>\n                    <Card.Img className=\"card-img-top\" variant=\"top\" src={product.picture} />\n                    <Card.Body>\n                        <Card.Title>Id: {product._id}</Card.Title>\n                        <Card.Title>Nome: {product.product}</Card.Title>\n                        <Card.Subtitle className=\"mb-2 text-muted\">Categoria: {product.category}</Card.Subtitle>\n                        <Card.Text>Descrição: {product.description}</Card.Text>\n                        <Card.Text>Preço: {product.price}</Card.Text>\n                        <Card.Text>Marca: {product.brand}</Card.Text>\n                            <ButtonGroup className={classes.Buttons}>\n                                <Button onClick={() => lessHandler()} className=\"btn btn-danger\">-</Button>\n                                <Button onClick={() => addHandler()} className=\"btn btn-primary\">+</Button>\n                            </ButtonGroup>\n                        <Card.Link href=\"#\">Comprar</Card.Link>\n                    </Card.Body>\n                </Card>\n            </div>\n        );\n    \n    \n    return (\n        <Aux>\n        <hr />\n        <div className=\"container\">\n            <div className={classes.Product}>\n                {card}\n            </div>\n        </div>\n        </Aux>\n    );\n});\n\nexport default product;\n","import React, { Suspense, useEffect } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Layout from './hoc/Layout/Layout';\nimport ProductsBuilder from './containers/Products/ProductsBuilder';\nimport Logout from './containers/Auth/Logout/Logout';\nimport Product from './components/Product/Product';\nimport * as actions from './store/actions/index';\n\nconst AdminDashboard = React.lazy(() => {\n  return import('./containers/Dashboard/AdminDashboard');\n});\n\nconst UserDashboard = React.lazy(() => {\n  return import('./containers/Dashboard/UserDashboard');\n});\n\n\nconst ProductsController = React.lazy(() => {\n  return import('./components/Controller/Products/ProductsController');\n});\n\nconst OrdersController = React.lazy(() => {\n  return import('./components/Controller/Orders/OrdersController');\n});\n\nconst UsersController = React.lazy(() => {\n  return import('./components/Controller/Users/UsersController');\n});\n\nconst OrderController = React.lazy(() => {\n  return import('./components/Controller/Orders/OrderController');\n});\n\nconst UserController = React.lazy(() => {\n  return import('./components/Controller/Users/UserController');\n});\n\n\nconst Orders = React.lazy(() => {\n  return import('./containers/Orders/Orders');\n});\n\nconst Signup = React.lazy(() => {\n  return import('./containers/Auth/Signup');\n});\n\nconst Login = React.lazy(() => {\n  return import('./containers/Auth/Login');\n});\n\nconst app = React.memo(props => {\n  const { onTryAutoSignup } = props;\n\n  useEffect(() => {\n    onTryAutoSignup();\n  }, [onTryAutoSignup]);\n  \n  let routes = (\n      <Switch>\n          <Route path=\"/user/signup\" render={props => <Signup {...props} />} />\n          <Route path=\"/user/login\" render={props => <Login {...props} />} />\n          <Route path='/api/:id' render={props => <Product {...props} />} />\n          <Route path='/' exact render={props => <ProductsBuilder {...props} />} />\n          <Redirect to=\"/\" />\n      </Switch>\n  );\n\n  if(props.isAuthenticated && !props.isAdmin) {\n    routes = ( \n      <Switch>\n          <Route path='/api/:id' exact component={Product} />\n          <Route path=\"/dashboard\" render={props => <UserDashboard {...props} />} />\n          <Route path=\"/dashboard/user\" render={props => <UserController {...props} />} />\n          <Route path=\"/dashboard/orders\" render={props => <OrderController {...props} />} />\n          <Route path=\"/user/logout\" component={Logout} />\n          <Route path='/' exact render={props => <ProductsBuilder {...props} />} />\n          <Redirect to=\"/\" />\n      </Switch>\n    );\n  }\n\n  if(props.isAdmin) {\n    routes = ( \n      <Switch>\n          <Route path='/api/:id' exact component={Product} />\n          <Route path=\"/\" exact render={props => <ProductsBuilder {...props} />} />\n          <Route path=\"/user/logout\" component={Logout} />\n          <Route path='/dashboard' render={props => <AdminDashboard {...props} />} />\n          <Route path=\"/dashboard/products\" render={props => <ProductsController {...props} />} />\n          <Route path=\"/dashboard/user\" render={props => <UsersController {...props} />} />\n          <Route path=\"/dashboard/orders\" render={props => <OrdersController {...props} />} />\n          <Redirect to=\"/dashboard\" />\n      </Switch>\n    );\n  }\n\n  // if(props.isAdmin) {\n  //   routes = ( \n      // <Switch>\n        // <Route path=\"/dashboard\" component={Dashboard} />\n        \n      // </Switch>\n  //   )\n  // }\n\n  return (\n    <div>\n      <Layout>\n        <Suspense fallback={<p>Loading...</p>}>\n          {routes}\n        </Suspense>\n      </Layout>\n    </div>\n  );\n});\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.signup.token !== null || state.auth.token !== null,\n    isAdmin: state.auth.isAdmin\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return{\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps) (app));","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    products: null,\n    totalPrice: 0,\n    error: false,\n    building: false\n};\n\nconst PRODUCTS_PRICES = {\n     borracha: 0.5\n};\n\nconst addProduct = ( state, action ) => {\n    const updatedProduct = { [action.productName]: state.products[action.productName] + 1 }\n    const updatedProducts = updateObject( state.products, updatedProduct );\n    const updatedState = {\n        products: updatedProducts,\n        totalPrice: state.totalPrice + PRODUCTS_PRICES[action.productName],\n        building: true\n    }\n    return updateObject( state, updatedState );\n};\n\nconst removeProduct = (state, action) => {\n    const updatedProd = { [action.productName]: state.products[action.productName] - 1 }\n    const updatedProds = updateObject( state.products, updatedProd );\n    const updatedSt = {\n        products: updatedProds,\n        totalPrice: state.totalPrice - PRODUCTS_PRICES[action.productName],\n        building: true\n    }\n    return updateObject( state, updatedSt );\n};\n\nconst setProducts = (state, action) => {\n    return updateObject( state, {\n        products: {\n            borracha: action.products.borracha\n        },\n        totalPrice: 0,\n        error: false,\n        building: false\n    } );\n};\n\nconst fetchProductsFailed = (state, action) => {\n    return updateObject( state, { error: true } );\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.ADD_PRODUCT: return addProduct( state, action );\n        case actionTypes.REMOVE_PRODUCT: return removeProduct(state, action);\n        case actionTypes.SET_PRODUCTS: return setProducts(state, action);    \n        case actionTypes.FETCH_PRODUCTS_FAILED: return fetchProductsFailed(state, action);\n        default: return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n};\n\nconst purchaseInit = ( state, action ) => {\n    return updateObject( state, { purchased: false } );\n};\n\nconst purchaseProductStart = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst purchaseProductSuccess = ( state, action ) => {\n    const newOrder = updateObject( action.orderData, { id: action.orderId } );\n    return updateObject( state, {\n        loading: false,\n        purchased: true,\n        orders: state.orders.concat( newOrder )\n    } );\n};\n\nconst purchaseProductFail = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst fetchOrdersStart = ( state, action ) => {\n    return updateObject( state, { loading: true } );\n};\n\nconst fetchOrdersSuccess = ( state, action ) => {\n    return updateObject( state, {\n        orders: action.orders,\n        loading: false\n    } );\n};\n\nconst fetchOrdersFail = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.PURCHASE_INIT: return purchaseInit( state, action );\n        case actionTypes.PURCHASE_PRODUCT_START: return purchaseProductStart( state, action );\n        case actionTypes.PURCHASE_PRODUCT_SUCCESS: return purchaseProductSuccess( state, action )\n        case actionTypes.PURCHASE_PRODUCT_FAIL: return purchaseProductFail( state, action );\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart( state, action );\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess( state, action );\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail( state, action );\n        default: return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    isAdmin: false,\n    authRedirectPath: '/'\n};\n\nconst authStart = (state, action) => {\n    return updateObject(state, { error: null, loading: true});\n};\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        userId: action.userId,\n        error: null,\n        loading: false,\n    });\n};\n\nconst adminSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        userId: action.userId,\n        isAdmin: true,\n        error: null,\n        loading: false,\n    });\n};\n\nconst authLogout = (state, action) => {\n    return updateObject(state, { token: null, userId: null, isAdmin: false });\n};\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n    return updateObject(state, {authRedirectPath: action.path})\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.ADMIN_SUCCESS: return adminSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        case actionTypes.SET_SIGNUP_REDIRECT_PATH: return setAuthRedirectPath(state, action);\n        default:\n            return state;           \n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/'\n};\n\nconst signupStart = (state, action) => {\n    return updateObject(state, { error: null, loading: true});\n};\n\nconst signupSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        userId: action.userId,\n        error: null,\n        loading: false,\n    });\n};\n\nconst authLogout = (state, action) => {\n    return updateObject(state, { token: null, userId: null });\n};\n\nconst signupFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n};\n\nconst setSignupRedirectPath = (state, action) => {\n    return updateObject(state, {authRedirectPath: action.path})\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SIGNUP_START: return signupStart(state, action);\n        case actionTypes.SIGNUP_SUCCESS: return signupSuccess(state, action);\n        case actionTypes.SIGNUP_FAIL: return signupFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        case actionTypes.SET_SIGNUP_REDIRECT_PATH: return setSignupRedirectPath(state, action);\n        default:\n            return state;           \n    }\n};\n\nexport default reducer;","import { put, call, delay } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport * as actions from '../actions/index';\n\nconst api = axios.create({\n    baseURL: '/'\n});\n\nconst delayAsync = ms => new Promise(res => setTimeout(res, ms));\n\nexport function* logoutSaga(action) {\n    yield call(delayAsync, 1000);\n    yield call([localStorage, 'removeItem'], \"token\");\n    yield call([localStorage, 'removeItem'], \"expirationDate\");\n    yield call([localStorage, 'removeItem'], \"userId\");\n    yield put(actions.logoutSucceed());\n}\n\nexport function* checkAuthTimeoutSaga (action){\n    yield delay(new Date().getTime() * 10000);\n    yield put(actions.logout());\n}\n\nexport function* registerUserSaga(action) {\n    yield put(actions.signupStart());\n        const authData = {\n            username: action.username,\n            email: action.email,\n            password: action.password,\n        };\n        \n        let url = '/user/signup';\n        \n        try{\n            const response = api.post(url, authData); \n                // yield put(actions.checkAuthTimeout(expirationDate - new Date().getTime()));\n                yield put(actions.signupSuccess(response.data._id, response.data.email));\n        } catch(error) {\n            console.log('not possible to auth: ' + error);\n            yield put(actions.signupFail('error to signup!'));\n        }\n}\n\nexport function* loginUserSaga(action) {\n    yield put(actions.authStart());\n\n        const loginData = {\n            email: action.email,\n            password: action.password\n        };\n        \n        let url = '/user/login';\n        \n        try{\n            const response = api.post(url, loginData);\n\n            if(response.email !== 'admin@admin.com') {\n                yield put(actions.authSuccess(response._id, response.email));\n            } else if (response.email === 'admin@admin.com') {\n                yield put(actions.adminSuccess(response._id, response.email));\n            } else {\n                yield put(actions.authFail('no email was found!'));\n            }\n        } catch(error) {\n                console.log('not possible to login: ' + error);\n                yield put(actions.authFail('not possible to login!'));\n            }                    \n}\n\nexport function* authCheckStateSaga(action) {\n    const token = yield localStorage.getItem('token');\n        if(!token) {\n            yield put(actions.logout());\n        } \n        else {\n            // const expirationDate = yield new Date(localStorage.getItem('expirationDate'));\n            //     if(expirationDate <= new Date()) { yield put(actions.logout());}\n            const userId = yield localStorage.getItem('userId');\n                if(userId !== 'admin@admin.com') {\n                    yield put(actions.authSuccess(token, userId));\n                }\n                if(userId === 'admin@admin.com') {\n                    yield put(actions.adminSuccess(token, userId));\n                }\n                // yield put(actions.checkAuthTimeout((expirationDate.getTime() - new Date().getTime())/1000));\n            }\n}\n\n// export function* getAllSaga(action) {\n//     try {\n//         api.get(USERURL).then(handleResponse).then(response => response)\n//     } catch(err) {\n//         console.log('getAllSaga fail: ' + err);\n        \n//     }\n// }\n\n// const handleResponse = response => {\n//     console.log(response);\n//     return response.text()\n//         .then(text => {\n//             const data = text && JSON.parse(text);\n//             if (!response.ok) {\n//                 if (response.status === 401) {\n//                     // auto logout if 401 response returned from api\n//                     logoutSaga();\n//                     window.location.reload(true);\n//                 }\n    \n//                 const error = (data && data.message) || response.statusText;\n//                 return Promise.reject(error);\n//             }\n    \n//             return data;\n//         });\n// }\n// export function* getUserSaga(action) {\n//     yield put(actions.getUser());\n//         const id =  yield localStorage.getItem('token');\n//         let url = `/user/${id}`;\n\n//         try{\n//         const response = yield api.get(url);\n//         console.log(response);\n        \n//         } catch(error) {\n//                 console.log(error);\n//             }        \n// }\n\n// export function* getAdminSaga(action) {\n//     yield put(actions.adminCheckState());\n//         const id = action.id;\n//         const authData = {\n//             username: action.username\n//         };\n//         let url = '/user/';\n\n//         try{\n//         const response = yield api.get(url + id, authData);\n//             console.log(response);\n            \n//         } catch(error) {\n//                 console.log(error);\n//             }        \n// }","import { put } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport * as actions from '../actions/index';\n\nconst api = axios.create({\n    baseURL: '/',\n});\n\nexport function* initProductsSaga(action) {\n    try{\n        const response = yield api.get( '/api' )\n        yield put(actions.setProducts(response.data));\n    } catch(error) {\n        yield put(actions.fetchProductsFailed());\n    }\n}","import { put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport * as actions from '../actions/index';\n\nconst api = axios.create({\n    baseURL: '/order'\n});\n\nexport function* purchaseProductSaga(action) {\n    \n    yield put( actions.purchaseProductStart() );\n    try{\n        const response = yield api.post( '/orders.json?auth=' + action.token, action.orderData )\n        //console.log( response.data );\n        yield put( actions.purchaseProductSuccess( response.data.name, action.orderData ) );\n        } catch(error)  {\n                yield put( actions.purchaseProductFail( error ) );\n        } \n}\n\nexport function* fetchOrdersSaga(action) {\n    yield put(actions.fetchOrdersStart());\n        const queryParams = '?auth=' + action.token + '&orderBy=\"userId\"&equalTo=\"' + action.userId + '\"';\n        try{\n            const response = yield api.get( '/orders.json' + queryParams );\n            const fetchedOrders = [];\n                for ( let key in response.data ) {\n                    fetchedOrders.push( {\n                        ...response.data[key],\n                        id: key\n                    } );\n                }\n                yield put(actions.fetchOrdersSuccess(fetchedOrders));    \n        } catch(error) {\n            yield put(actions.fetchOrdersFail(error));\n          }\n    } ","import { takeEvery, all, takeLatest } from 'redux-saga/effects';\n\nimport * as actionType from '../actions/actionTypes';\nimport { logoutSaga, checkAuthTimeoutSaga, authCheckStateSaga, loginUserSaga, registerUserSaga } from './auth';\nimport { initProductsSaga } from './product';\nimport { purchaseProductSaga, fetchOrdersSaga } from './order';   \n\nexport function* watchAuth() {\n    yield all([\n        takeEvery(actionType.AUTH_INITIATE_LOGOUT, logoutSaga),\n        takeEvery(actionType.AUTH_CHECK_TIMEOUT, checkAuthTimeoutSaga),\n        takeEvery(actionType.AUTH_USER, loginUserSaga),\n        takeEvery(actionType.SIGNUP_USER, registerUserSaga),\n        takeEvery(actionType.AUTH_CHECK_STATE, authCheckStateSaga)  \n    ]);\n}\n\nexport function* watchProductBuilder() {\n    yield takeEvery(actionType.INIT_PRODUCTS, initProductsSaga);\n}\n\nexport function* watchOrder() {\n    yield takeLatest(actionType.PURCHASE_PRODUCT, purchaseProductSaga);\n    yield takeEvery(actionType.FETCH_ORDERS, fetchOrdersSaga);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport './index.css';\nimport App from './App';\nimport productBuilderReducer from './store/reducers/product';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\nimport signupReducer from './store/reducers/signup';\n\nimport {watchAuth, watchProductBuilder, watchOrder } from './store/sagas';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n    productBuilder: productBuilderReducer,\n    order: orderReducer,\n    auth: authReducer,\n    signup: signupReducer,\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk, sagaMiddleware)\n));\n\nsagaMiddleware.run(watchAuth);\nsagaMiddleware.run(watchProductBuilder);\nsagaMiddleware.run(watchOrder);\n\nconst app = (\n  <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\nregisterServiceWorker();"],"sourceRoot":""}