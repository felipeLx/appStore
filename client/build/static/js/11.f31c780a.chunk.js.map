{"version":3,"sources":["components/Controller/Users/UsersController.js"],"names":["usersController","React","memo","props","useState","usersList","setUsersList","useEffect","api","getAllUsers","then","users","data","catch","err","console","log","editHandler","id","a","updateUserById","prod","deleteHandler","deleteUserById","form","map","user","key","_id","className","Body","Text","username","email","orderId","dataCreated","onClick","event","target","params"],"mappings":"6LAOMA,EAAkBC,IAAMC,MAAK,SAAAC,GAAU,IAAD,EAENC,mBAAS,IAFH,mBAEjCC,EAFiC,KAEtBC,EAFsB,KA8CxCC,qBAAU,WACNC,IAAIC,cACCC,MAAK,SAAAC,GACFL,EAAaK,EAAMC,SAEtBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC/B,IAGH,IAAMG,EAAW,uCAAG,WAAMC,GAAN,SAAAC,EAAA,sEACVX,IAAIY,eAAeF,GACpBR,MAAK,SAAAW,GAAI,OAAIN,QAAQC,IAAI,cACzBH,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAHd,2CAAH,sDAMXQ,EAAa,uCAAG,WAAMJ,GAAN,SAAAC,EAAA,sEACZX,IAAIe,eAAeL,GACxBR,MAAK,SAAAW,GAAI,OAAIN,QAAQC,IAAI,cACzBH,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAHR,2CAAH,sDA4CfU,EAAOnB,EAAUoB,KAAI,SAAAC,GAAI,OACzB,kBAAC,IAAD,CAAMC,IAAKD,EAAKE,IAAKC,UAAU,QAC3B,kBAAC,IAAKC,KAAN,CAAWD,UAAU,aACjB,kBAAC,IAAKE,KAAN,KAAW,uCAAX,IAAiCL,EAAKE,KACtC,kBAAC,IAAKG,KAAN,KAAW,6CAAX,IAAuCL,EAAKM,UAC5C,kBAAC,IAAKD,KAAN,KAAW,0CAAX,IAAoCL,EAAKO,OACzC,kBAAC,IAAKF,KAAN,KAAW,4CAAX,IAAsCL,EAAKQ,SAC3C,kBAAC,IAAKH,KAAN,KAAW,yCAAX,IAAmCL,EAAKS,cAE5C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,QAAS,SAACC,GAAD,OAAWpB,EAAYoB,EAAMC,OAAOC,OAAOrB,KAAKW,UAAU,0BAA3E,QACA,kBAAC,IAAD,CAAQO,QAAS,SAACC,GAAD,OAAWf,EAAce,EAAMC,OAAOC,OAAOrB,KAAKW,UAAU,4BAA7E,eAOZ,OACI,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,8BACGL,QAQJxB","file":"static/js/11.f31c780a.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, Button, ButtonGroup } from 'react-bootstrap';\n\nimport api from '../../../api/index';\n// import Spinner from '../../UI/Spinner/Spinner';\n// import { updateObject } from '../../../shared/utility';\n\nconst usersController = React.memo(props => {\n\n    const [usersList, setUsersList] = useState([]);\n    // const [controls, setControls] = useState({\n    //     name: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'text',\n    //             placeholder: 'Nome do produto'\n    //         },\n    //         value: ''\n    //     },\n    //     brand: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'text',\n    //             placeholder: 'Marca'\n    //         },\n    //         value: ''\n    //     },\n    //     category: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'text',\n    //             placeholder: 'Categoria'\n    //         },\n    //         value: ''\n    //     },\n    //     price: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'text',\n    //             placeholder: 'Preço'\n    //         },\n    //         value: ''\n    //     },\n    //     description: {\n    //         elementType: 'input',\n    //         elementConfig: {\n    //             type: 'textarea',\n    //             placeholder: 'Descrição'\n    //         },\n    //         value: ''\n    //     },\n    // });\n    \n    useEffect(() => {\n        api.getAllUsers()\n            .then(users => {\n                setUsersList(users.data);\n            })\n            .catch(err => console.log(err));\n    }, []);\n    \n\n    const editHandler = async(id) => {\n        await api.updateUserById(id)\n            .then(prod => console.log('updated'))\n            .catch(err => console.log(err))\n    };\n\n    const deleteHandler = async(id) => {\n        await api.deleteUserById(id)\n        .then(prod => console.log('deleted'))\n        .catch(err => console.log(err))\n    };\n\n    // const createHandler = async() => {\n\n    //     return <p>create new product</p>\n    // };\n\n    // const inputChangedHandler = ( event, controlName ) => {\n    //     const updatedControls = updateObject( controls, {\n    //         [controlName]: updateObject( controls[controlName], {\n    //             value: event.target.value,\n    //             })\n    //         });\n    //         setControls(updatedControls);\n    //     };\n\n    // const submitHandler = ( event ) => {\n    //     event.preventDefault();\n    //     console.log('submitHandler - productsController');\n        \n    // };\n        \n\n    // const formElementsArray = [];\n    // for ( let key in controls ) {\n    //     formElementsArray.push( {\n    //         id: key,\n    //         config: controls[key]\n    //     } );\n    // };\n\n    // let form = formElementsArray.map( formElement => (\n    //     <Input\n    //         key={formElement.id}\n    //         elementType={formElement.config.elementType}\n    //         elementConfig={formElement.config.elementConfig}\n    //         value={formElement.config.value}\n    //         changed={( event ) => inputChangedHandler( event, formElement.id )} />\n    // ));\n\n    let form = usersList.map(user => (\n        <Card key={user._id} className=\"card\">\n            <Card.Body className=\"card-body\">\n                <Card.Text><strong>ID:</strong> {user._id}</Card.Text>\n                <Card.Text><strong>Username:</strong> {user.username}</Card.Text>\n                <Card.Text><strong>Email:</strong> {user.email}</Card.Text>\n                <Card.Text><strong>OrderId:</strong> {user.orderId}</Card.Text>\n                <Card.Text><strong>Date:</strong> {user.dataCreated}</Card.Text>\n            </Card.Body>\n            <ButtonGroup>\n                <Button onClick={(event) => editHandler(event.target.params.id)} className=\"btn btn-info btn-space\">EDIT</Button>\n                <Button onClick={(event) => deleteHandler(event.target.params.id)} className=\"btn btn-danger btn-space\">DELETE</Button>\n            </ButtonGroup>\n                    \n        </Card>\n\n    ));\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <form>\n                  {form}\n                </form>\n            </div>\n        </div>\n    );\n    \n});\n\nexport default usersController;"],"sourceRoot":""}