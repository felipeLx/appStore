{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.module.css","components/Controller/Products/ProductsController.js"],"names":["input","props","inputElement","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","className","join","elementConfig","value","onChange","changed","options","map","option","key","displayValue","Input","Label","label","module","exports","productsController","React","memo","useState","editFields","setEditFields","productsList","setProductsList","id","setId","name","type","placeholder","brand","description","price","category","controls","setControls","useEffect","api","getAllProducts","then","products","data","catch","err","console","log","sendEditedHandler","a","updateProduct","product","updateProductById","prod","window","location","reload","deleteHandler","deleteProductById","form","_id","Img","variant","src","picture","Body","Text","formElementsArray","config","formElement","event","controlName","updatedControls","updateObject","target","valid","checkValidity","validation","inputChangedHandler","onClick","index","params"],"mappings":"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","file":"static/js/7.f483493b.chunk.js","sourcesContent":["import React from 'react';\n\nimport classes from './Input.module.css';\n\nconst input = ( props ) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch ( props.elementType ) {\n        case ( 'input' ):\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'textarea' ):\n            inputElement = <textarea\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'select' ):\n            inputElement = (\n                <select\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n\n};\n\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","import React, { useEffect, useState } from 'react';\nimport { Card, Button } from 'react-bootstrap';\n\nimport api from '../../../api/index';\nimport Input from '../../UI/Input/Input';\nimport { updateObject, checkValidity } from '../../../shared/utility';\n\nconst productsController = React.memo(props => {\n\n    const [editFields, setEditFields] = useState(false); \n    const [productsList, setProductsList] = useState([]);\n    const [id, setId] = useState('');\n    const [controls, setControls] = useState({\n        name: {\n          elementType: 'input',\n          elementConfig: {\n              type: 'text',\n              placeholder: 'Nome do produto'\n          },\n          value: ''\n        },\n        brand: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Marca ou fabricante'\n            },\n            value: ''\n          },\n        description: {\n            elementType: 'textarea',\n            elementConfig: {\n                type: 'textarea',\n                placeholder: 'Descrição do produto'\n            },\n            value: ''\n          },\n        price: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Preço de venda'\n            },\n            value: ''\n          },\n        category: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Categoria'\n            },\n            value: ''\n          }\n    });\n    \n    useEffect(() => {\n        api.getAllProducts()\n            .then(products => {\n                setProductsList(products.data);\n            })\n            .catch(err => console.log(err));\n    }, []);\n\n    const editHandler = () => {\n        \n        setEditFields(!editFields);\n        setId(productsList[0]._id);\n        setControls({\n            name: {\n                value: productsList[0].product \n            },\n            brand: {\n                value: productsList[0].brand \n            },\n            category: {\n                value: productsList[0].category \n            },\n            price: {\n                value: productsList[0].price\n            },\n            description: {\n                value: productsList[0].description\n            },\n        });\n    };\n\n    const sendEditedHandler = async() => {\n        const updateProduct = {\n            product: controls.name.value,\n            brand: controls.brand.value,\n            category: controls.category.value,\n            price: controls.price.value,\n            description: controls.description.value,\n        };\n\n        await api.updateProductById(id, updateProduct )\n            .then(prod => window.location.reload(true))\n            .catch(err => console.log(err))\n    };\n\n    const deleteHandler = async(id) => {\n        await api.deleteProductById(id)\n        .then(prod => window.location.reload(true))\n        .catch(err => console.log(err))\n    };\n\n    let form = productsList.map(product => (\n            <Card key={product._id} className=\"card\">\n                <Card.Img className=\"card-img-top\" variant=\"top\" src={product.picture} />\n                <Card.Body className=\"card-body\">\n                    <Card.Text><strong>Name: </strong>{product.product}</Card.Text>\n                    <Card.Text><strong>Marca</strong>{product.brand}</Card.Text>\n                    <Card.Text><strong>Preço: </strong>{product.price}</Card.Text>\n                    <Card.Text><strong>Categoria: </strong>{product.category}</Card.Text>\n                    <Card.Text><strong>Descrição:</strong> {product.description}</Card.Text>\n                </Card.Body>\n            </Card>\n\n    ));\n\n    const inputChangedHandler = ( event, controlName ) => {\n        const updatedControls = updateObject( controls, {\n            [controlName]: updateObject( controls[controlName], {\n                value: event.target.value,\n                valid: checkValidity( event.target.value, controls[controlName].validation ),\n                touched: true\n                })\n            });\n            setControls(updatedControls);\n        };\n  \n    const formElementsArray = [];\n        for ( let key in controls ) {\n            formElementsArray.push( {\n                id: key,\n                config: controls[key]\n            } );\n    };\n\n    if(editFields) {\n        form = formElementsArray.map( formElement => (\n                <Input  \n                    key={formElement.config.value}\n                    label={formElement.id}\n                    value={formElement.config.value}\n                    changed={( event ) => inputChangedHandler( event, formElement.id )} />\n            )\n        )       \n    };\n    \n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <form>\n                  {form}\n                    <div className=\"col\">\n                        {!editFields ? \n                            <Button onClick={(index) => editHandler(index)} className=\"btn btn-warning\">EDITAR</Button> :\n                            <Button onClick={() => sendEditedHandler()} className=\"btn btn-info\">ENVIAR</Button>\n                        }\n                    </div>\n                    <div className=\"col\">\n                        <Button onClick={(event) => deleteHandler(event.target.params.id)} className=\"btn btn-danger btn-space\">DELETE</Button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    ); \n});\n\nexport default productsController;"],"sourceRoot":""}